{"version":3,"sources":["../../../src/components/fields/LocationSelector.js"],"names":["LocationmodeVisible","UnconnectedDropdown","modifyPlotProps","props","context","plotProps","fullValue","isVisible","container","locationmode","UnconnectedLocation","_","localize","label","value","Component","propTypes","attr","PropTypes","string","Field","contextTypes","func","updateContainer","Location","UnconnectedLocationSelector","state","mode","locations","setMode","bind","setState","locationssrc","locationmodesrc","lat","lon","latsrc","lonsrc","type","any","updatePlot","object"],"mappings":"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","file":"LocationSelector.js","sourcesContent":["import React, {Fragment, Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connectToContainer} from 'lib';\nimport Field from './Field';\nimport Radio from './Radio';\nimport {UnconnectedDropdown} from './Dropdown';\nimport DataSelector from './DataSelector';\n\nconst LocationmodeVisible = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    if (!plotProps.fullValue) {\n      plotProps.isVisible = true;\n      plotProps.fullValue = plotProps.container.locationmode;\n      return;\n    }\n  },\n});\n\nclass UnconnectedLocation extends Component {\n  render() {\n    const {localize: _} = this.context;\n\n    return (\n      <Fragment>\n        <DataSelector label={_('Locations')} attr=\"locations\" />\n        <LocationmodeVisible\n          label={_('Location Format')}\n          attr=\"locationmode\"\n          clearable={false}\n          options={[\n            {label: _('Country Names'), value: 'country names'},\n            {label: _('Country Abbreviations (ISO-3)'), value: 'ISO-3'},\n            {\n              label: _('USA State Abbreviations (e.g. NY)'),\n              value: 'USA-states',\n            },\n          ]}\n        />\n      </Fragment>\n    );\n  }\n}\n\nUnconnectedLocation.propTypes = {\n  attr: PropTypes.string,\n  ...Field.propTypes,\n};\n\nUnconnectedLocation.contextTypes = {\n  localize: PropTypes.func,\n  updateContainer: PropTypes.func,\n};\n\nconst Location = connectToContainer(UnconnectedLocation);\n\nclass UnconnectedLocationSelector extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      mode: props.container.locations ? 'location' : 'latlon',\n    };\n\n    this.setMode = this.setMode.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      mode: this.props.container.locations ? 'location' : 'latlon',\n    });\n  }\n\n  setMode(mode) {\n    this.setState({mode: mode});\n    this.props.updateContainer(\n      mode === 'latlon'\n        ? {\n            locations: null,\n            locationmode: null,\n            locationssrc: null,\n            locationmodesrc: null,\n          }\n        : {lat: null, lon: null, latsrc: null, lonsrc: null}\n    );\n  }\n\n  render() {\n    const {mode} = this.state;\n    const {\n      localize: _,\n      container: {type: type},\n    } = this.context;\n\n    return type === 'scattergeo' ? (\n      <Fragment>\n        <Field {...this.props} attr={this.props.attr}>\n          <Radio\n            options={[\n              {value: 'latlon', label: _('Lat/Lon')},\n              {value: 'location', label: _('Location')},\n            ]}\n            fullValue={mode}\n            updatePlot={this.setMode}\n            attr={this.props.attr}\n          />\n        </Field>\n        {mode === 'latlon' ? (\n          <Fragment>\n            <DataSelector label={_('Latitude')} attr=\"lat\" />\n            <DataSelector label={_('Longitude')} attr=\"lon\" />\n          </Fragment>\n        ) : (\n          <Location attr=\"type\" />\n        )}\n      </Fragment>\n    ) : type === 'choropleth' ? (\n      <Location attr=\"type\" />\n    ) : (\n      <Fragment>\n        <DataSelector label={_('Latitude')} attr=\"lat\" />\n        <DataSelector label={_('Longitude')} attr=\"lon\" />\n      </Fragment>\n    );\n  }\n}\n\nUnconnectedLocationSelector.propTypes = {\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  attr: PropTypes.string,\n  ...Field.propTypes,\n};\n\nUnconnectedLocationSelector.contextTypes = {\n  container: PropTypes.object,\n  localize: PropTypes.func,\n  updateContainer: PropTypes.func,\n};\n\nexport default connectToContainer(UnconnectedLocationSelector);\n"]}