{"version":3,"sources":["../../../src/components/fields/FilterOperation.js"],"names":["operations","inequality","value","label","_","inrange","exrange","inset","exset","findOperation","operator","op","ops","key","hasOwnProperty","map","o","indexOf","UnconnectedFilterOperation","props","context","localize","state","operation","fullValue","setOperation","bind","setState","updatePlot","optionRenderer","valueRenderer","backgroundDark","attr","operators","opValue","length","Component","propTypes","PropTypes","any","func","Field","contextTypes","UnconnectedFilterValue","valueMax","setValue","setValueMax","v","container","val","split","trim","defaultValue","label1","val1","Array","isArray","join","string","object","FilterOperation","FilterValue"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,IAAMA,aAAa,SAAbA,UAAa;AAAA,SAAM;AACvBC,gBAAY,CACV,EAACC,OAAO,IAAR,EAAcC,OAAOC,EAAE,oBAAF,CAArB,EADU,EAEV,EAACF,OAAO,GAAR,EAAaC,OAAOC,EAAE,oBAAF,CAApB,EAFU,EAGV,EAACF,OAAO,IAAR,EAAcC,OAAOC,EAAE,oBAAF,CAArB,EAHU,EAIV,EAACF,OAAO,GAAR,EAAaC,OAAOC,EAAE,oBAAF,CAApB,EAJU,EAKV,EAACF,OAAO,GAAR,EAAaC,OAAOC,EAAE,oBAAF,CAApB,EALU,EAMV,EAACF,OAAO,IAAR,EAAcC,OAAOC,EAAE,oBAAF,CAArB,EANU,CADW;AASvBC,aAAS,CACP,EAACH,OAAO,IAAR,EAAcC,OAAOC,EAAE,wBAAF,CAArB,EADO,EAEP,EAACF,OAAO,IAAR,EAAcC,OAAOC,EAAE,wBAAF,CAArB,EAFO,EAGP,EAACF,OAAO,IAAR,EAAcC,OAAOC,EAAE,wBAAF,CAArB,EAHO,EAIP,EAACF,OAAO,IAAR,EAAcC,OAAOC,EAAE,wBAAF,CAArB,EAJO,CATc;AAevBE,aAAS,CACP,EAACJ,OAAO,IAAR,EAAcC,OAAOC,EAAE,wBAAF,CAArB,EADO,EAEP,EAACF,OAAO,IAAR,EAAcC,OAAOC,EAAE,wBAAF,CAArB,EAFO,EAGP,EAACF,OAAO,IAAR,EAAcC,OAAOC,EAAE,wBAAF,CAArB,EAHO,EAIP,EAACF,OAAO,IAAR,EAAcC,OAAOC,EAAE,wBAAF,CAArB,EAJO,CAfc;AAqBvBG,WAAO,CAAC,EAACL,OAAO,IAAR,EAAcC,OAAOC,EAAE,SAAF,CAArB,EAAD,CArBgB;AAsBvBI,WAAO,CAAC,EAACN,OAAO,IAAR,EAAcC,OAAOC,EAAE,SAAF,CAArB,EAAD;AAtBgB,GAAN;AAAA,CAAnB;;AAyBA,IAAMK,gBAAgB,SAAhBA,aAAgB,CAACC,QAAD,EAAWN,CAAX,EAAiB;AACrC,MAAIO,KAAK,YAAT;AACA,MAAMC,MAAMZ,WAAWI,CAAX,CAAZ;AACA,OAAK,IAAMS,GAAX,IAAkBD,GAAlB,EAAuB;AACrB,QAAIA,IAAIE,cAAJ,CAAmBD,GAAnB,KAA2BD,IAAIC,GAAJ,EAASE,GAAT,CAAa;AAAA,aAAKC,EAAEd,KAAP;AAAA,KAAb,EAA2Be,OAA3B,CAAmCP,QAAnC,MAAiD,CAAC,CAAjF,EAAoF;AAClFC,WAAKE,GAAL;AACA;AACD;AACF;AACD,SAAOF,EAAP;AACD,CAVD;;IAYMO,0B;;;AACJ,sCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,wJACpBD,KADoB,EACbC,OADa;;AAAA,QAEThB,CAFS,GAEJgB,OAFI,CAEnBC,QAFmB;;;AAI1B,UAAKC,KAAL,GAAa;AACXC,iBAAWd,cAAc,MAAKU,KAAL,CAAWK,SAAzB,EAAoCpB,CAApC,CADA;AAEXM,gBAAUV,WAAWI,CAAX,EAAcH,UAAd,CAAyB,CAAzB,EAA4BC;AAF3B,KAAb;;AAKA,UAAKuB,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AAT0B;AAU3B;;;;iCAEYxB,K,EAAO;AAAA,UACDE,CADC,GACI,KAAKgB,OADT,CACXC,QADW;;AAElB,UAAMX,WAAWV,WAAWI,CAAX,EAAcF,KAAd,EAAqB,CAArB,EAAwBA,KAAzC;AACA,WAAKyB,QAAL,CAAc,EAACJ,WAAWrB,KAAZ,EAAmBQ,UAAUA,QAA7B,EAAd;AACA,WAAKS,KAAL,CAAWS,UAAX,CAAsBlB,QAAtB;AACD;;;6BAEQ;AAAA,mBAC8E,KAAKS,KADnF;AAAA,UACAK,SADA,UACAA,SADA;AAAA,UACWI,UADX,UACWA,UADX;AAAA,UACuBC,cADvB,UACuBA,cADvB;AAAA,UACuCC,aADvC,UACuCA,aADvC;AAAA,UACsDC,cADtD,UACsDA,cADtD;AAAA,UACsEC,IADtE,UACsEA,IADtE;AAAA,UAEU5B,CAFV,GAEe,KAAKgB,OAFpB,CAEAC,QAFA;;;AAIP,UAAMY,YAAY,CAChB;AACE9B,eAAOC,EAAE,YAAF,CADT;AAEEF,eAAO;AAFT,OADgB,EAKhB;AACEC,eAAOC,EAAE,eAAF,CADT;AAEEF,eAAO;AAFT,OALgB,EAShB;AACEC,eAAOC,EAAE,eAAF,CADT;AAEEF,eAAO;AAFT,OATgB,EAahB;AACEC,eAAOC,EAAE,gBAAF,CADT;AAEEF,eAAO;AAFT,OAbgB,EAiBhB;AACEC,eAAOC,EAAE,gBAAF,CADT;AAEEF,eAAO;AAFT,OAjBgB,CAAlB;;AAuBA,UAAMgC,UAAUV,aAAaA,UAAUW,MAAV,GAAmB,CAAhC,GAAoCX,SAApC,GAAgD,KAAKF,KAAL,CAAWZ,QAA3E;AACA,aACE;AAAA;AAAA;AACE;AAAC,yBAAD;AAAA,uBAAW,KAAKS,KAAhB,IAAuB,MAAMa,IAA7B;AACE,wCAAC,kBAAD;AACE,4BAAgBD,cADlB;AAEE,qBAASE,SAFX;AAGE,mBAAOxB,cAAcyB,OAAd,EAAuB9B,CAAvB,CAHT;AAIE,sBAAU,KAAKqB,YAJjB;AAKE,uBAAW,KALb;AAME,4BAAgBI,cANlB;AAOE,2BAAeC;AAPjB,YADF;AAUG,eAAKR,KAAL,CAAWC,SAAX,KAAyB,OAAzB,IAAoC,KAAKD,KAAL,CAAWC,SAAX,KAAyB,OAA7D,GAAuE,IAAvE,GACC,8BAAC,kBAAD;AACE,4BAAgBQ,cADlB;AAEE,qBAAS/B,WAAWI,CAAX,EAAc,KAAKkB,KAAL,CAAWC,SAAzB,CAFX;AAGE,mBAAOW,OAHT;AAIE,sBAAUN,UAJZ;AAKE,uBAAW,KALb;AAME,4BAAgBC,cANlB;AAOE,2BAAeC;AAPjB;AAXJ;AADF,OADF;AA0BD;;;;EA1EsCM,gB;;AA6EzClB,2BAA2BmB,SAA3B;AACEb,aAAWc,oBAAUC,GADvB;AAEEX,cAAYU,oBAAUE;AAFxB,GAGKC,gBAAMJ,SAHX;AAKAnB,2BAA2BwB,YAA3B,GAA0C;AACxCrB,YAAUiB,oBAAUE;AADoB,CAA1C;;IAIMG,sB;;;AACJ,kCAAYxB,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,iJACpBD,KADoB,EACbC,OADa;;AAG1B,WAAKE,KAAL,GAAa,EAACpB,OAAO,EAAR,EAAY0C,UAAU,EAAtB,EAAb;;AAEA,WAAKC,QAAL,GAAgB,OAAKA,QAAL,CAAcnB,IAAd,QAAhB;AACA,WAAKoB,WAAL,GAAmB,OAAKA,WAAL,CAAiBpB,IAAjB,QAAnB;AAN0B;AAO3B;;;;6BAEQqB,C,EAAG;AAAA,qBACuB,KAAK3B,OAD5B;AAAA,UACOhB,CADP,YACHiB,QADG;AAAA,UACU2B,SADV,YACUA,SADV;;AAEV,UAAMrC,KAAKF,cAAcuC,UAAUzB,SAAxB,EAAmCnB,CAAnC,CAAX;AACA,WAAKuB,QAAL,CAAc,EAACzB,OAAO6C,CAAR,EAAd;AACA,UAAIE,YAAJ;AACAA,YAAMtC,OAAO,SAAP,IAAoBA,OAAO,SAA3B,GAAuC,CAACoC,CAAD,EAAI,KAAKzB,KAAL,CAAWsB,QAAf,CAAvC,GAAkEG,CAAxE;AACA,UAAIpC,OAAO,OAAP,IAAkBA,OAAO,OAA7B,EAAsC;AACpCsC,cAAMA,IAAIC,KAAJ,CAAU,GAAV,CAAN;AACAD,cAAMA,IAAIlC,GAAJ,CAAQ;AAAA,iBAAKgC,EAAEI,IAAF,EAAL;AAAA,SAAR,CAAN;AACD;AACD,WAAKhC,KAAL,CAAWS,UAAX,CAAsBqB,GAAtB;AACD;;;gCAEWF,C,EAAG;AACb,WAAKpB,QAAL,CAAc,EAACiB,UAAUG,CAAX,EAAd;AACA,WAAK5B,KAAL,CAAWS,UAAX,CAAsB,CAAC,KAAKN,KAAL,CAAWpB,KAAZ,EAAmB6C,CAAnB,CAAtB;AACD;;;6BAEQ;AAAA,sBAC0B,KAAK3B,OAD/B;AAAA,UACUhB,CADV,aACAiB,QADA;AAAA,UACa2B,SADb,aACaA,SADb;;;AAGP,UAAMzB,YAAYyB,aAAaA,UAAUzB,SAAvB,GAAmCyB,UAAUzB,SAA7C,GAAyD,GAA3E;;AAHO,oBAKiC,KAAKJ,KALtC;AAAA,UAKAK,SALA,WAKAA,SALA;AAAA,UAKWQ,IALX,WAKWA,IALX;AAAA,UAKiBoB,YALjB,WAKiBA,YALjB;;AAMP,UAAMzC,KAAKF,cAAcc,SAAd,EAAyBnB,CAAzB,CAAX;;AAEA,UAAIiD,SAASjD,EAAE,WAAF,CAAb;AACA,UAAIO,OAAO,SAAP,IAAoBA,OAAO,SAA/B,EAA0C;AACxC0C,iBAASjD,EAAE,aAAF,CAAT;AACD,OAFD,MAEO,IAAIO,OAAO,OAAP,IAAkBA,OAAO,OAA7B,EAAsC;AAC3C0C,iBAASjD,EAAE,QAAF,CAAT;AACD;;AAED,UAAIkD,OAAO9B,SAAX;AACA,UAAI,CAACb,OAAO,OAAP,IAAkBA,OAAO,OAA1B,KAAsC4C,MAAMC,OAAN,CAAchC,SAAd,CAA1C,EAAoE;AAClE8B,eAAO9B,UAAUiC,IAAV,CAAe,IAAf,CAAP;AACD,OAFD,MAEO,IAAIF,MAAMC,OAAN,CAAchC,SAAd,CAAJ,EAA8B;AACnC8B,eAAO9B,UAAU,CAAV,CAAP;AACD;;AAED,aACE;AAAA;AAAA;AACE;AAAC,yBAAD;AAAA,uBAAW,KAAKL,KAAhB,IAAuB,OAAOkC,MAA9B;AACE,wCAAC,mBAAD,IAAW,OAAOC,IAAlB,EAAwB,cAAcA,IAAtC,EAA4C,UAAU,KAAKT,QAA3D;AADF,SADF;AAIG,UAAElC,OAAO,SAAP,IAAoBA,OAAO,SAA7B,IAA0C,IAA1C,GACC;AAAC,yBAAD;AAAA,uBAAW,KAAKQ,KAAhB,IAAuB,OAAOf,EAAE,aAAF,CAA9B,EAAgD,MAAM4B,IAAtD;AACE,wCAAC,mBAAD;AACE,mBAAOuB,MAAMC,OAAN,CAAchC,SAAd,IAA2BA,UAAU,CAAV,CAA3B,GAA0CA,SADnD;AAEE,0BAAc4B,YAFhB;AAGE,sBAAU,KAAKN;AAHjB;AADF;AALJ,OADF;AAgBD;;;;EAlEkCV,gB;;AAqErCO,uBAAuBN,SAAvB;AACEe,gBAAcd,oBAAUoB,MAD1B;AAEElC,aAAWc,oBAAUC,GAFvB;AAGEX,cAAYU,oBAAUE;AAHxB,GAIKC,gBAAMJ,SAJX;AAMAM,uBAAuBD,YAAvB,GAAsC;AACpCrB,YAAUiB,oBAAUE,IADgB;AAEpCQ,aAAWV,oBAAUqB;AAFe,CAAtC;;AAKO,IAAMC,4CAAkB,6BAAmB1C,0BAAnB,CAAxB;AACA,IAAM2C,oCAAc,6BAAmBlB,sBAAnB,CAApB","file":"FilterOperation.js","sourcesContent":["import Field from './Field';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport DropdownWidget from '../widgets/Dropdown';\nimport TextInput from '../widgets/TextInput';\nimport {connectToContainer} from 'lib';\n\nconst operations = _ => ({\n  inequality: [\n    {value: '!=', label: _('Target ≠ Reference')},\n    {value: '<', label: _('Target < Reference')},\n    {value: '<=', label: _('Target ≤ Reference')},\n    {value: '=', label: _('Target = Reference')},\n    {value: '>', label: _('Target > Reference')},\n    {value: '>=', label: _('Target ≥ Reference')},\n  ],\n  inrange: [\n    {value: '[]', label: _('Lower ≤ Target ≤ Upper')},\n    {value: '()', label: _('Lower < Target < Upper')},\n    {value: '[)', label: _('Lower ≤ Target < Upper')},\n    {value: '(]', label: _('Lower < Target ≤ Upper')},\n  ],\n  exrange: [\n    {value: ')(', label: _('Lower ≤ Target ≤ Upper')},\n    {value: '][', label: _('Lower < Target < Upper')},\n    {value: ')[', label: _('Lower ≤ Target < Upper')},\n    {value: '](', label: _('Lower < Target ≤ Upper')},\n  ],\n  inset: [{value: '{}', label: _('Include')}],\n  exset: [{value: '}{', label: _('Exclude')}],\n});\n\nconst findOperation = (operator, _) => {\n  let op = 'inequality';\n  const ops = operations(_);\n  for (const key in ops) {\n    if (ops.hasOwnProperty(key) && ops[key].map(o => o.value).indexOf(operator) !== -1) {\n      op = key;\n      break;\n    }\n  }\n  return op;\n};\n\nclass UnconnectedFilterOperation extends Component {\n  constructor(props, context) {\n    super(props, context);\n    const {localize: _} = context;\n\n    this.state = {\n      operation: findOperation(this.props.fullValue, _),\n      operator: operations(_).inequality[0].value,\n    };\n\n    this.setOperation = this.setOperation.bind(this);\n  }\n\n  setOperation(value) {\n    const {localize: _} = this.context;\n    const operator = operations(_)[value][0].value;\n    this.setState({operation: value, operator: operator});\n    this.props.updatePlot(operator);\n  }\n\n  render() {\n    const {fullValue, updatePlot, optionRenderer, valueRenderer, backgroundDark, attr} = this.props;\n    const {localize: _} = this.context;\n\n    const operators = [\n      {\n        label: _('Inequality'),\n        value: 'inequality',\n      },\n      {\n        label: _('Include Range'),\n        value: 'inrange',\n      },\n      {\n        label: _('Exclude Range'),\n        value: 'exrange',\n      },\n      {\n        label: _('Include Values'),\n        value: 'inset',\n      },\n      {\n        label: _('Exclude Values'),\n        value: 'exset',\n      },\n    ];\n\n    const opValue = fullValue && fullValue.length > 0 ? fullValue : this.state.operator;\n    return (\n      <div>\n        <Field {...this.props} attr={attr}>\n          <DropdownWidget\n            backgroundDark={backgroundDark}\n            options={operators}\n            value={findOperation(opValue, _)}\n            onChange={this.setOperation}\n            clearable={false}\n            optionRenderer={optionRenderer}\n            valueRenderer={valueRenderer}\n          />\n          {this.state.operation === 'inset' || this.state.operation === 'exset' ? null : (\n            <DropdownWidget\n              backgroundDark={backgroundDark}\n              options={operations(_)[this.state.operation]}\n              value={opValue}\n              onChange={updatePlot}\n              clearable={false}\n              optionRenderer={optionRenderer}\n              valueRenderer={valueRenderer}\n            />\n          )}\n        </Field>\n      </div>\n    );\n  }\n}\n\nUnconnectedFilterOperation.propTypes = {\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  ...Field.propTypes,\n};\nUnconnectedFilterOperation.contextTypes = {\n  localize: PropTypes.func,\n};\n\nclass UnconnectedFilterValue extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {value: '', valueMax: ''};\n\n    this.setValue = this.setValue.bind(this);\n    this.setValueMax = this.setValueMax.bind(this);\n  }\n\n  setValue(v) {\n    const {localize: _, container} = this.context;\n    const op = findOperation(container.operation, _);\n    this.setState({value: v});\n    let val;\n    val = op === 'inrange' || op === 'exrange' ? [v, this.state.valueMax] : v;\n    if (op === 'inset' || op === 'exset') {\n      val = val.split(',');\n      val = val.map(v => v.trim());\n    }\n    this.props.updatePlot(val);\n  }\n\n  setValueMax(v) {\n    this.setState({valueMax: v});\n    this.props.updatePlot([this.state.value, v]);\n  }\n\n  render() {\n    const {localize: _, container} = this.context;\n\n    const operation = container && container.operation ? container.operation : '=';\n\n    const {fullValue, attr, defaultValue} = this.props;\n    const op = findOperation(operation, _);\n\n    let label1 = _('Reference');\n    if (op === 'inrange' || op === 'exrange') {\n      label1 = _('Lower Bound');\n    } else if (op === 'inset' || op === 'exset') {\n      label1 = _('Values');\n    }\n\n    let val1 = fullValue;\n    if ((op === 'inset' || op === 'exset') && Array.isArray(fullValue)) {\n      val1 = fullValue.join(', ');\n    } else if (Array.isArray(fullValue)) {\n      val1 = fullValue[0];\n    }\n\n    return (\n      <div>\n        <Field {...this.props} label={label1}>\n          <TextInput value={val1} defaultValue={val1} onUpdate={this.setValue} />\n        </Field>\n        {!(op === 'inrange' || op === 'exrange') ? null : (\n          <Field {...this.props} label={_('Upper Bound')} attr={attr}>\n            <TextInput\n              value={Array.isArray(fullValue) ? fullValue[1] : fullValue}\n              defaultValue={defaultValue}\n              onUpdate={this.setValueMax}\n            />\n          </Field>\n        )}\n      </div>\n    );\n  }\n}\n\nUnconnectedFilterValue.propTypes = {\n  defaultValue: PropTypes.string,\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  ...Field.propTypes,\n};\nUnconnectedFilterValue.contextTypes = {\n  localize: PropTypes.func,\n  container: PropTypes.object,\n};\n\nexport const FilterOperation = connectToContainer(UnconnectedFilterOperation);\nexport const FilterValue = connectToContainer(UnconnectedFilterValue);\n"]}