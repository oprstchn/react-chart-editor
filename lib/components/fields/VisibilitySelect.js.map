{"version":3,"sources":["../../../src/components/fields/VisibilitySelect.js"],"names":["UnconnectedVisibilitySelect","props","context","setMode","bind","setLocals","mode","fullValue","undefined","MULTI_VALUED_PLACEHOLDER","defaultOpt","updateContainer","attr","dropdown","clearable","options","showOn","label","Array","isArray","includes","children","Component","propTypes","PropTypes","any","updatePlot","func","bool","oneOfType","number","string","array","Field","contextTypes"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEaA,2B,WAAAA,2B;;;AACX,uCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,0JACpBD,KADoB,EACbC,OADa;;AAG1B,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,OAAf;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,OAAjB;;AAEA,UAAKC,SAAL,CAAeJ,KAAf;AAN0B;AAO3B;;;;8CAEyBA,K,EAAO;AAC/B,WAAKI,SAAL,CAAeJ,KAAf;AACD;;;8BAESA,K,EAAO;AACf,WAAKK,IAAL,GACEL,MAAMM,SAAN,KAAoBC,SAApB,IAAiCP,MAAMM,SAAN,KAAoBE,mCAArD,CAA8E;AAA9E,QACI,KAAKR,KAAL,CAAWS,UADf,GAEIT,MAAMM,SAHZ;AAID;;;4BAEOD,I,EAAM;AACZ,WAAKL,KAAL,CAAWU,eAAX,qBAA6B,KAAKV,KAAL,CAAWW,IAAxC,EAA+CN,IAA/C;AACD;;;6BAEQ;AAAA,mBACqD,KAAKL,KAD1D;AAAA,UACAY,QADA,UACAA,QADA;AAAA,UACUC,SADV,UACUA,SADV;AAAA,UACqBC,OADrB,UACqBA,OADrB;AAAA,UAC8BC,MAD9B,UAC8BA,MAD9B;AAAA,UACsCJ,IADtC,UACsCA,IADtC;AAAA,UAC4CK,KAD5C,UAC4CA,KAD5C;;;AAGP,aACE;AAAC,uBAAD;AAAA;AACGJ,mBACC,8BAAC,kBAAD;AACE,gBAAMD,IADR;AAEE,iBAAOK,KAFT;AAGE,mBAASF,OAHX;AAIE,qBAAW,KAAKT,IAJlB;AAKE,sBAAY,KAAKH,OALnB;AAME,qBAAWW;AANb,UADD,GAUC,8BAAC,eAAD;AACE,gBAAMF,IADR;AAEE,iBAAOK,KAFT;AAGE,mBAASF,OAHX;AAIE,qBAAW,KAAKT,IAJlB;AAKE,sBAAY,KAAKH;AALnB,UAXJ;AAmBIe,cAAMC,OAAN,CAAcH,MAAd,KAAyBA,OAAOI,QAAP,CAAgB,KAAKd,IAArB,CAA1B,IAAyD,KAAKA,IAAL,KAAcU,MAAvE,GACG,KAAKf,KAAL,CAAWoB,QADd,GAEG;AArBN,OADF;AAyBD;;;;EArD8CC,gB;;AAwDjDtB,4BAA4BuB,SAA5B;AACEhB,aAAWiB,oBAAUC,GADvB;AAEEC,cAAYF,oBAAUG,IAFxB;AAGEd,YAAUW,oBAAUI,IAHtB;AAIEd,aAAWU,oBAAUI,IAJvB;AAKEZ,UAAQQ,oBAAUK,SAAV,CAAoB,CAC1BL,oBAAUM,MADgB,EAE1BN,oBAAUI,IAFgB,EAG1BJ,oBAAUO,MAHgB,EAI1BP,oBAAUQ,KAJgB,CAApB,CALV;AAWEtB,cAAYc,oBAAUK,SAAV,CAAoB,CAACL,oBAAUM,MAAX,EAAmBN,oBAAUI,IAA7B,EAAmCJ,oBAAUO,MAA7C,CAApB,CAXd;AAYEd,SAAOO,oBAAUO,MAZnB;AAaEnB,QAAMY,oBAAUO;AAblB,GAcKE,gBAAMV,SAdX;;AAiBAvB,4BAA4BkC,YAA5B,GAA2C;AACzCvB,mBAAiBa,oBAAUG;AADc,CAA3C;;kBAIe,6BAAmB3B,2BAAnB,C","file":"VisibilitySelect.js","sourcesContent":["import React, {Fragment, Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connectToContainer} from 'lib';\nimport {MULTI_VALUED_PLACEHOLDER} from 'lib/constants';\nimport Field from './Field';\nimport Radio from './Radio';\nimport Dropdown from './Dropdown';\n\nexport class UnconnectedVisibilitySelect extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.setMode = this.setMode.bind(this);\n    this.setLocals = this.setLocals.bind(this);\n\n    this.setLocals(props);\n  }\n\n  componentWillReceiveProps(props) {\n    this.setLocals(props);\n  }\n\n  setLocals(props) {\n    this.mode =\n      props.fullValue === undefined || props.fullValue === MULTI_VALUED_PLACEHOLDER // eslint-disable-line no-undefined\n        ? this.props.defaultOpt\n        : props.fullValue;\n  }\n\n  setMode(mode) {\n    this.props.updateContainer({[this.props.attr]: mode});\n  }\n\n  render() {\n    const {dropdown, clearable, options, showOn, attr, label} = this.props;\n\n    return (\n      <Fragment>\n        {dropdown ? (\n          <Dropdown\n            attr={attr}\n            label={label}\n            options={options}\n            fullValue={this.mode}\n            updatePlot={this.setMode}\n            clearable={clearable}\n          />\n        ) : (\n          <Radio\n            attr={attr}\n            label={label}\n            options={options}\n            fullValue={this.mode}\n            updatePlot={this.setMode}\n          />\n        )}\n        {(Array.isArray(showOn) && showOn.includes(this.mode)) || this.mode === showOn\n          ? this.props.children\n          : null}\n      </Fragment>\n    );\n  }\n}\n\nUnconnectedVisibilitySelect.propTypes = {\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  dropdown: PropTypes.bool,\n  clearable: PropTypes.bool,\n  showOn: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  defaultOpt: PropTypes.oneOfType([PropTypes.number, PropTypes.bool, PropTypes.string]),\n  label: PropTypes.string,\n  attr: PropTypes.string,\n  ...Field.propTypes,\n};\n\nUnconnectedVisibilitySelect.contextTypes = {\n  updateContainer: PropTypes.func,\n};\n\nexport default connectToContainer(UnconnectedVisibilitySelect);\n"]}