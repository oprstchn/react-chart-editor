{"version":3,"sources":["../../../src/components/fields/ColorPicker.js"],"names":["UnconnectedColorPicker","props","context","state","empty","fullValue","handleEmpty","setState","updatePlot","defaultColor","Component","propTypes","PropTypes","any","func","bool","string","Field"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEaA,sB,WAAAA,sB;;;AACX,kCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,gJACpBD,KADoB,EACbC,OADa;;AAE1B,UAAKC,KAAL,GAAa;AACXC,aAAO,CAAC,MAAKH,KAAL,CAAWI,SAAZ,IAAyB,MAAKJ,KAAL,CAAWK;AADhC,KAAb;AAF0B;AAK3B;;;;6BAEQ;AAAA;;AACP,UAAI,KAAKH,KAAL,CAAWC,KAAf,EAAsB;AACpB,eACE;AAAC,yBAAD;AAAW,eAAKH,KAAhB;AACE;AAAA;AAAA,cAAK,WAAU,cAAf;AAAA;AACoE,eADpE;AAEE;AAAA;AAAA;AACE,yBAAS,mBAAM;AACb,yBAAKM,QAAL,CAAc,EAACH,OAAO,KAAR,EAAd;AACA,yBAAKH,KAAL,CAAWO,UAAX,CAAsB,OAAKP,KAAL,CAAWQ,YAAjC;AACD;AAJH;AAAA;AAAA,aAFF;AAAA;AAAA;AADF,SADF;AAgBD;;AAED,aACE;AAAC,uBAAD;AAAW,aAAKR,KAAhB;AACE,sCAAC,qBAAD;AACE,yBAAe,KAAKA,KAAL,CAAWI,SAD5B;AAEE,yBAAe,KAAKJ,KAAL,CAAWO;AAF5B;AADF,OADF;AAQD;;;;EApCyCE,gB;;AAuC5CV,uBAAuBW,SAAvB;AACEN,aAAWO,oBAAUC,GADvB;AAEEL,cAAYI,oBAAUE,IAFxB;AAGER,eAAaM,oBAAUG,IAHzB;AAIEN,gBAAcG,oBAAUI;AAJ1B,GAKKC,gBAAMN,SALX;;kBAQe,6BAAmBX,sBAAnB,C","file":"ColorPicker.js","sourcesContent":["import ColorPickerWidget from '../widgets/ColorPicker';\nimport Field from './Field';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectToContainer} from 'lib';\n\nexport class UnconnectedColorPicker extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      empty: !this.props.fullValue && this.props.handleEmpty,\n    };\n  }\n\n  render() {\n    if (this.state.empty) {\n      return (\n        <Field {...this.props}>\n          <div className=\"js-test-info\">\n            This color is computed from other parts of the figure but you can{' '}\n            <a\n              onClick={() => {\n                this.setState({empty: false});\n                this.props.updatePlot(this.props.defaultColor);\n              }}\n            >\n              override it\n            </a>\n            .\n          </div>\n        </Field>\n      );\n    }\n\n    return (\n      <Field {...this.props}>\n        <ColorPickerWidget\n          selectedColor={this.props.fullValue}\n          onColorChange={this.props.updatePlot}\n        />\n      </Field>\n    );\n  }\n}\n\nUnconnectedColorPicker.propTypes = {\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  handleEmpty: PropTypes.bool,\n  defaultColor: PropTypes.string,\n  ...Field.propTypes,\n};\n\nexport default connectToContainer(UnconnectedColorPicker);\n"]}