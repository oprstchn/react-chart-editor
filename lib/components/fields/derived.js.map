{"version":3,"sources":["../../../src/components/fields/derived.js"],"names":["AxisAnchorDropdown","UnconnectedDropdown","modifyPlotProps","props","context","plotProps","_","localize","options","attr","startsWith","fullLayout","_subplots","yaxis","map","label","axis","value","xaxis","push","AxisOverlayDropdown","unshift","filter","fullContainer","_id","option","clearable","RangesliderVisible","UnconnectedRadio","fullValue","visible","isVisible","AxisSide","ContourNumeric","UnconnectedNumeric","autocontour","BinningDropdown","type","orientation","TickFormat","UnconnectedDropdownCustom","customOpt","ShowInLegend","UnconnectedVisibilitySelect","showlegend","HistogramInfoVertical","Info","HistogramInfoHorizontal","Histogram2d","AxesRange","UnconnectedAxisRangeValue","autorange","NTicks","tickmode","DTicks","_name","UnconnectedNumericFraction","propTypes","defaultProps","units","showSlider","numericFractionModifyPlotProps","attrMeta","updatePlot","min","max","Math","round","v","NumericFraction","NumericFractionDomain","container","overlaying","NumericFractionInverse","NumericReciprocal","AnnotationArrowRef","xref","yref","currentAxisRef","Error","axes","a","length","computeAxesRefOptions","AnnotationRef","axref","ayref","currentOffsetRef","updateContainer","update","PositioningRef","PositioningNumeric","step","propsAttr","i","ax","charAt","TextPosition","TextInfo","UnconnectedFlaglist","text","HoverInfo","includes","locations","lat","lon","FillDropdown","HoveronDropdown","HovermodeDropdown","Object","keys","dropdown","showOn","HoverColor","UnconnectedColorPicker","Boolean","hovermode"],"mappings":"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","file":"derived.js","sourcesContent":["import isNumeric from 'fast-isnumeric';\nimport {UnconnectedDropdown} from './Dropdown';\nimport {UnconnectedDropdownCustom} from './DropdownCustom';\nimport {UnconnectedFlaglist} from './Flaglist';\nimport {UnconnectedNumeric} from './Numeric';\nimport {UnconnectedAxisRangeValue} from './AxisRangeValue';\nimport {UnconnectedRadio} from './Radio';\nimport Info from './Info';\nimport {UnconnectedColorPicker} from './ColorPicker';\nimport {UnconnectedVisibilitySelect} from './VisibilitySelect';\nimport {connectToContainer, getAllAxes, getAxisTitle, axisIdToAxisName} from 'lib';\n\nexport const AxisAnchorDropdown = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _} = context;\n    let options = [];\n\n    if (props.attr.startsWith('xaxis')) {\n      options = context.fullLayout._subplots.yaxis.map(axis => {\n        return {\n          label: getAxisTitle(context.fullLayout[axisIdToAxisName(axis)]),\n          value: axis,\n        };\n      });\n    } else if (props.attr.startsWith('yaxis')) {\n      options = context.fullLayout._subplots.xaxis.map(axis => {\n        return {\n          label: getAxisTitle(context.fullLayout[axisIdToAxisName(axis)]),\n          value: axis,\n        };\n      });\n    }\n    options.push({label: _('Free'), value: 'free'});\n    plotProps.options = options;\n  },\n});\n\nexport const AxisOverlayDropdown = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _} = context;\n    let options = [];\n\n    if (props.attr.startsWith('xaxis')) {\n      options = context.fullLayout._subplots.xaxis.map(axis => {\n        return {\n          label: getAxisTitle(context.fullLayout[axisIdToAxisName(axis)]),\n          value: axis,\n        };\n      });\n    } else if (props.attr.startsWith('yaxis')) {\n      options = context.fullLayout._subplots.yaxis.map(axis => {\n        return {\n          label: getAxisTitle(context.fullLayout[axisIdToAxisName(axis)]),\n          value: axis,\n        };\n      });\n    }\n\n    options.unshift({label: _('None'), value: false});\n\n    // filter out the current axisID, can't overlay over itself\n    plotProps.options = options.filter(\n      option =>\n        context.fullContainer &&\n        context.fullContainer.xaxis &&\n        context.fullContainer.yaxis &&\n        context.fullContainer.xaxis._id !== option.value &&\n        context.fullContainer.yaxis._id !== option.value\n    );\n\n    plotProps.clearable = false;\n  },\n});\n\nexport const RangesliderVisible = connectToContainer(UnconnectedRadio, {\n  modifyPlotProps: (props, context, plotProps) => {\n    if (!plotProps.fullValue) {\n      plotProps.fullValue = false;\n      plotProps.visible = false;\n      plotProps.isVisible = true;\n      return;\n    }\n  },\n});\n\nexport const AxisSide = connectToContainer(UnconnectedRadio, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const _ = context.localize;\n\n    if (plotProps.fullValue === 'left' || plotProps.fullValue === 'right') {\n      plotProps.options = [{label: _('Left'), value: 'left'}, {label: _('Right'), value: 'right'}];\n      return;\n    }\n\n    if (plotProps.fullValue === 'top' || plotProps.fullValue === 'bottom') {\n      plotProps.options = [{label: _('Top'), value: 'top'}, {label: _('Bottom'), value: 'bottom'}];\n      return;\n    }\n\n    if (plotProps.fullValue === 'clockwise' || plotProps.fullValue === 'counterclockwise') {\n      plotProps.options = [\n        {label: _('Clockwise'), value: 'clockwise'},\n        {label: _('Counterclockwise'), value: 'counterclockwise'},\n      ];\n      return;\n    }\n\n    plotProps.isVisible = false;\n  },\n});\n\nexport const ContourNumeric = connectToContainer(UnconnectedNumeric, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {fullContainer} = plotProps;\n    if (plotProps.isVisible && fullContainer && fullContainer.autocontour) {\n      plotProps.isVisible = false;\n    }\n  },\n});\n\nexport const BinningDropdown = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _} = context;\n    const axis =\n      plotProps.fullContainer.type === 'histogram2d'\n        ? 'Z'\n        : plotProps.fullContainer.orientation === 'v'\n          ? 'Y'\n          : 'X';\n    plotProps.options = [\n      {label: _('Count ') + axis, value: 'count'},\n      {label: _('Sum ') + axis, value: 'sum'},\n      {label: _('Average ') + axis, value: 'avg'},\n      {label: _('Minimum ') + axis, value: 'min'},\n      {label: _('Maximum ') + axis, value: 'max'},\n    ];\n  },\n});\n\nexport const TickFormat = connectToContainer(UnconnectedDropdownCustom, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _} = context;\n    if (plotProps.fullContainer.type === 'date') {\n      plotProps.options = [\n        {label: _('Default'), value: ''},\n        {label: _('Advanced (d3-time-format)'), value: '%x'},\n      ];\n      plotProps.customOpt = '%x';\n    } else {\n      plotProps.options = [\n        {label: _('Simple'), value: ''},\n        {label: _('Advanced (d3-format)'), value: 's'},\n      ];\n      plotProps.customOpt = 's';\n    }\n  },\n});\n\nexport const ShowInLegend = connectToContainer(UnconnectedVisibilitySelect, {\n  modifyPlotProps: (props, context, plotProps) => {\n    plotProps.isVisible = context.fullLayout.showlegend;\n    return plotProps;\n  },\n});\n\nexport const HistogramInfoVertical = connectToContainer(Info, {\n  modifyPlotProps: (props, context, plotProps) => {\n    plotProps.isVisible =\n      context.fullContainer.type === 'histogram' && context.fullContainer.orientation === 'v';\n    return plotProps;\n  },\n});\n\nexport const HistogramInfoHorizontal = connectToContainer(Info, {\n  modifyPlotProps: (props, context, plotProps) => {\n    plotProps.isVisible =\n      context.fullContainer.type === 'histogram' && context.fullContainer.orientation === 'h';\n    return plotProps;\n  },\n});\n\nexport const Histogram2d = connectToContainer(Info, {\n  modifyPlotProps: (props, context, plotProps) => {\n    plotProps.isVisible = context.fullContainer.type === 'histogram2d';\n    return plotProps;\n  },\n});\n\nexport const AxesRange = connectToContainer(UnconnectedAxisRangeValue, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {fullContainer} = plotProps;\n    if (plotProps.isVisible && fullContainer && fullContainer.autorange) {\n      plotProps.isVisible = false;\n    }\n    return plotProps;\n  },\n});\n\nexport const NTicks = connectToContainer(UnconnectedNumeric, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {fullContainer} = plotProps;\n    if (plotProps.isVisible && fullContainer && fullContainer.tickmode !== 'auto') {\n      plotProps.isVisible = false;\n    }\n    return plotProps;\n  },\n});\n\nexport const DTicks = connectToContainer(UnconnectedAxisRangeValue, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {fullContainer} = plotProps;\n    if (\n      fullContainer &&\n      fullContainer._name &&\n      (fullContainer._name.startsWith('lat') || fullContainer._name.startsWith('lon'))\n    ) {\n      // don't mess with visibility on geo axes\n      return plotProps;\n    }\n    if (plotProps.isVisible && fullContainer && fullContainer.tickmode !== 'linear') {\n      plotProps.isVisible = false;\n    }\n    return plotProps;\n  },\n});\n\nclass UnconnectedNumericFraction extends UnconnectedNumeric {}\nUnconnectedNumericFraction.propTypes = UnconnectedNumeric.propTypes;\nUnconnectedNumericFraction.defaultProps = {\n  units: '%',\n  showSlider: true,\n};\n\nconst numericFractionModifyPlotProps = (props, context, plotProps) => {\n  const {attrMeta, fullValue, updatePlot} = plotProps;\n  const min = (attrMeta && attrMeta.min) || 0;\n  const max = (attrMeta && attrMeta.max) || 1;\n  if (isNumeric(fullValue)) {\n    plotProps.fullValue = Math.round((100 * (fullValue - min)) / (max - min));\n  }\n\n  plotProps.updatePlot = v => {\n    if (isNumeric(v)) {\n      updatePlot((v / 100) * (max - min) + min);\n    } else {\n      updatePlot(v);\n    }\n  };\n  plotProps.max = 100;\n  plotProps.min = 0;\n};\n\nexport const NumericFraction = connectToContainer(UnconnectedNumericFraction, {\n  modifyPlotProps: numericFractionModifyPlotProps,\n});\n\nexport const NumericFractionDomain = connectToContainer(UnconnectedNumericFraction, {\n  modifyPlotProps: (props, context, plotProps) => {\n    numericFractionModifyPlotProps(props, context, plotProps);\n    if (context.container && context.container.overlaying) {\n      plotProps.isVisible = null;\n    }\n  },\n});\n\nexport const NumericFractionInverse = connectToContainer(UnconnectedNumericFraction, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {attrMeta, fullValue, updatePlot} = plotProps;\n    if (isNumeric(fullValue)) {\n      plotProps.fullValue = Math.round((1 - fullValue) * 100);\n    }\n\n    plotProps.updatePlot = v => {\n      if (isNumeric(v)) {\n        updatePlot(1 - v / 100);\n      } else {\n        updatePlot(v);\n      }\n    };\n\n    // Also take the inverse of max and min.\n    if (attrMeta) {\n      if (isNumeric(attrMeta.min)) {\n        plotProps.max = (1 - attrMeta.min) * 100;\n      }\n\n      if (isNumeric(attrMeta.max)) {\n        plotProps.min = (1 - attrMeta.max) * 100;\n      }\n    }\n  },\n});\n\nexport const NumericReciprocal = connectToContainer(UnconnectedNumeric, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {fullValue, updatePlot} = plotProps;\n\n    if (isNumeric(fullValue)) {\n      plotProps.fullValue = 1 / fullValue;\n    }\n\n    plotProps.updatePlot = v => {\n      if (isNumeric(v)) {\n        updatePlot(1 / v);\n      } else {\n        updatePlot(v);\n      }\n    };\n\n    plotProps.min = 0;\n  },\n});\n\nexport const AnnotationArrowRef = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _} = context;\n    if (!context.fullContainer) {\n      return;\n    }\n    const {\n      fullContainer: {xref, yref},\n    } = context;\n\n    let currentAxisRef;\n    if (props.attr === 'axref') {\n      currentAxisRef = xref;\n    } else if (props.attr === 'ayref') {\n      currentAxisRef = yref;\n    } else {\n      throw new Error(\n        _(\n          'AnnotationArrowRef must be given either \"axref\" or \"ayref\" as attrs. Instead was given'\n        ) + props.attr\n      );\n    }\n\n    if (currentAxisRef === 'paper') {\n      // If currentAxesRef is paper provide all axes options to user.\n\n      const axes = getAllAxes(context.fullLayout).filter(a => a._id);\n      if (axes.length > 0) {\n        plotProps.options = [\n          {label: _('in pixels'), value: 'pixel'},\n          ...computeAxesRefOptions(axes, props.attr),\n        ];\n      } else {\n        plotProps.isVisible = false;\n      }\n    } else {\n      // If currentAxesRef is an actual axes then offer that value as the only\n      // axes option.\n      plotProps.options = [\n        {label: _('in pixels'), value: 'pixel'},\n        {label: _('according to axis'), value: currentAxisRef},\n      ];\n    }\n\n    plotProps.clearable = false;\n  },\n});\n\nexport const AnnotationRef = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    if (!context.fullContainer) {\n      return;\n    }\n    const {\n      fullContainer: {axref, ayref},\n      localize: _,\n    } = context;\n\n    let currentOffsetRef;\n    if (props.attr === 'xref') {\n      currentOffsetRef = axref;\n    } else if (props.attr === 'yref') {\n      currentOffsetRef = ayref;\n    } else {\n      throw new Error(\n        _('AnnotationRef must be given either \"xref\" or \"yref\" as attrs. Instead was given') +\n          props.attr +\n          '.'\n      );\n    }\n\n    const axes = getAllAxes(context.fullLayout).filter(a => a._id);\n    if (axes.length > 0) {\n      plotProps.options = [\n        {label: _('Canvas'), value: 'paper'},\n        ...computeAxesRefOptions(axes, props.attr),\n      ];\n    } else {\n      plotProps.isVisible = false;\n    }\n\n    if (currentOffsetRef !== 'pixel') {\n      plotProps.updatePlot = v => {\n        if (!plotProps.updateContainer) {\n          return;\n        }\n\n        /*\n         * If user is changing axis also change their a[x|y]ref arrow axis\n         * reference to match if the value is an axis value.\n         * Behaviour copied from plot.ly/create\n         */\n        const update = {[props.attr]: v};\n        if (v !== 'paper') {\n          update[`a${props.attr}`] = v;\n        }\n\n        plotProps.updateContainer(update);\n      };\n    }\n\n    plotProps.clearable = false;\n  },\n});\n\nexport const PositioningRef = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const axes = getAllAxes(context.fullLayout).filter(a => a._id);\n    if (axes.length > 0) {\n      plotProps.options = [\n        {label: 'Canvas', value: 'paper'},\n        ...computeAxesRefOptions(axes, props.attr),\n      ];\n\n      plotProps.clearable = false;\n    } else {\n      plotProps.isVisible = false;\n    }\n  },\n});\n\nexport const PositioningNumeric = connectToContainer(UnconnectedNumeric, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {fullContainer, fullValue, updatePlot} = plotProps;\n    if (\n      fullContainer &&\n      (fullContainer[props.attr[0] + 'ref'] === 'paper' ||\n        fullContainer[props.attr[props.attr.length - 1] + 'ref'] === 'paper')\n    ) {\n      plotProps.units = '%';\n      plotProps.showSlider = true;\n      plotProps.max = 100;\n      plotProps.min = 0;\n      plotProps.step = 1;\n      if (isNumeric(fullValue)) {\n        plotProps.fullValue = Math.round(100 * fullValue);\n      }\n\n      plotProps.updatePlot = v => {\n        if (isNumeric(v)) {\n          updatePlot(v / 100);\n        } else {\n          updatePlot(v);\n        }\n      };\n    }\n  },\n});\n\nfunction computeAxesRefOptions(axes, propsAttr) {\n  const options = [];\n  for (let i = 0; i < axes.length; i++) {\n    const ax = axes[i];\n    if (ax._id.charAt(0) === propsAttr.charAt(0) || ax._id.charAt(0) === propsAttr.charAt(1)) {\n      const label = getAxisTitle(ax);\n      options.push({label, value: ax._id});\n    }\n  }\n\n  return options;\n}\n\nexport const TextPosition = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _} = context;\n    let options = [\n      {label: _('Top Left'), value: 'top left'},\n      {label: _('Top Center'), value: 'top center'},\n      {label: _('Top Right'), value: 'top right'},\n      {label: _('Middle Left'), value: 'middle left'},\n      {label: _('Middle Center'), value: 'middle center'},\n      {label: _('Middle Right'), value: 'middle right'},\n      {label: _('Bottom Left'), value: 'bottom left'},\n      {label: _('Bottom Center'), value: 'bottom center'},\n      {label: _('Bottom Right'), value: 'bottom right'},\n    ];\n    if (context.container.type === 'pie' || context.container.type === 'bar') {\n      options = [\n        {label: _('Inside'), value: 'inside'},\n        {label: _('Outside'), value: 'outside'},\n        {label: _('Auto'), value: 'auto'},\n        {label: _('None'), value: 'none'},\n      ];\n    }\n    plotProps.options = options;\n    plotProps.clearable = false;\n  },\n});\n\nexport const TextInfo = connectToContainer(UnconnectedFlaglist, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _, container} = context;\n    const options = [\n      {label: _('Label'), value: 'label'},\n      {label: _('Value'), value: 'value'},\n      {label: _('%'), value: 'percent'},\n    ];\n\n    if (container.text) {\n      options.push({label: _('Text'), value: 'text'});\n    }\n\n    plotProps.options = options;\n  },\n});\n\nexport const HoverInfo = connectToContainer(UnconnectedFlaglist, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _, container} = context;\n    let options = [{label: _('X'), value: 'x'}, {label: _('Y'), value: 'y'}];\n\n    if (\n      [\n        'heatmap',\n        'heatmapgl',\n        'histogram2d',\n        'histogram2dcontour',\n        'contour',\n        'contourcarpet',\n        'scatter3d',\n        'surface',\n        'mesh3d',\n      ].includes(container.type)\n    ) {\n      options.push({label: _('Z'), value: 'z'});\n    } else if (container.type === 'choropleth') {\n      options = [{label: _('Location'), value: 'location'}, {label: _('Values'), value: 'z'}];\n    } else if (container.type === 'scattergeo') {\n      if (container.locations) {\n        options = [{label: _('Location'), value: 'location'}];\n      } else if (container.lat || container.lon) {\n        options = [{label: _('Longitude'), value: 'lon'}, {label: _('Latitude'), value: 'lat'}];\n      }\n    } else if (container.type === 'scattermapbox') {\n      options = [{label: _('Longitude'), value: 'lon'}, {label: _('Latitude'), value: 'lat'}];\n    } else if (container.type === 'scatterternary') {\n      options = [\n        {label: _('A'), value: 'a'},\n        {label: _('B'), value: 'b'},\n        {label: _('C'), value: 'c'},\n      ];\n    } else if (['scatterpolar', 'scatterpolargl', 'barpolar'].includes(container.type)) {\n      options = [{label: _('R'), value: 'r'}, {label: _('Theta'), value: 'theta'}];\n    } else if (container.type === 'pie') {\n      options = [\n        {label: _('Label'), value: 'label'},\n        {label: _('Value'), value: 'value'},\n        {label: _('Percent'), value: 'percent'},\n      ];\n    } else if (container.type === 'table') {\n      plotProps.isVisible = false;\n    } else if (['cone', 'streamtube'].includes(container.type)) {\n      options = [\n        {label: _('X'), value: 'x'},\n        {label: _('Y'), value: 'y'},\n        {label: _('Z'), value: 'z'},\n        {label: _('U'), value: 'u'},\n        {label: _('V'), value: 'v'},\n        {label: _('W'), value: 'w'},\n        {label: _('Norm'), value: 'norm'},\n        {label: _('Divergence'), value: 'divergence'},\n      ];\n    }\n\n    if (container.text) {\n      options.push({label: _('Text'), value: 'text'});\n    }\n\n    options.push({label: _('Trace name'), value: 'name'});\n\n    plotProps.options = options;\n  },\n});\n\nexport const FillDropdown = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _} = context;\n\n    let options = [\n      {label: _('None'), value: 'none'},\n      {label: _('Y = 0'), value: 'tozeroy'},\n      {label: _('X = 0'), value: 'tozerox'},\n      {label: _('Previous Y'), value: 'tonexty'},\n      {label: _('Previous X'), value: 'tonextx'},\n    ];\n\n    if (\n      context.container.type === 'scatterternary' ||\n      context.container.type === 'scattercarpet' ||\n      context.container.type === 'scatterpolar'\n    ) {\n      options = [\n        {label: _('None'), value: 'none'},\n        {label: _('To Self'), value: 'toself'},\n        {label: _('To Next'), value: 'tonext'},\n      ];\n    } else if (\n      context.container.type === 'scattergeo' ||\n      context.container.type === 'scattermapbox'\n    ) {\n      options = [{label: _('None'), value: 'none'}, {label: _('To Self'), value: 'toself'}];\n    }\n\n    plotProps.options = options;\n    plotProps.clearable = false;\n  },\n});\n\nexport const HoveronDropdown = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _} = context;\n\n    let options;\n    if (context.container.type === 'box') {\n      options = [\n        {label: _('Boxes'), value: 'boxes'},\n        {label: _('Points'), value: 'points'},\n        {label: _('Boxes and Points'), value: 'boxes+points'},\n      ];\n    } else if (context.container.type === 'violin') {\n      options = [\n        {label: _('Violins'), value: 'violins'},\n        {label: _('Points'), value: 'points'},\n        {label: _('KDE'), value: 'kde'},\n        {label: _('Violins and Points'), value: 'violins+points'},\n        {label: _('Violins, Points and KDE'), value: 'violins+points+kde'},\n      ];\n    } else {\n      options = [\n        {label: _('Points'), value: 'points'},\n        {label: _('Fills'), value: 'fills'},\n        {label: _('Points and Fills'), value: 'points+fills'},\n      ];\n    }\n\n    plotProps.options = options;\n    plotProps.clearable = false;\n  },\n});\n\nexport const HovermodeDropdown = connectToContainer(UnconnectedVisibilitySelect, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _} = context;\n\n    plotProps.options =\n      context.container.xaxis && Object.keys(context.container.xaxis).length > 0\n        ? [\n            {label: _('Closest'), value: 'closest'},\n            {label: _('X Axis'), value: 'x'},\n            {label: _('Y Axis'), value: 'y'},\n            {label: _('Disable'), value: false},\n          ]\n        : [{label: _('Closest'), value: 'closest'}, {label: _('Disable'), value: false}];\n    plotProps.clearable = false;\n    plotProps.dropdown = true;\n    plotProps.showOn = ['closest', 'x', 'y'];\n  },\n});\n\nexport const HoverColor = connectToContainer(UnconnectedColorPicker, {\n  modifyPlotProps: (props, context, plotProps) => {\n    plotProps.isVisible = Boolean(context.fullLayout.hovermode);\n    return plotProps;\n  },\n});\n"]}