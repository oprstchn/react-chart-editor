{"version":3,"sources":["../../../src/components/fields/DualNumeric.js"],"names":["UnconnectedDualNumericFraction","props","context","updatePlot","bind","updatePlot2","value","percentage","updateContainer","attr2","multiValued","step","min","max","fullValue","Math","round","fullValue2","fullContainer","get","placeholder","placeholder2","defaultValue","hideArrows","Component","propTypes","PropTypes","any","number","bool","showSlider","func","Field","contextTypes","object"],"mappings":"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","file":"DualNumeric.js","sourcesContent":["import Field from './Field';\nimport NumericInput from '../widgets/NumericInput';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectToContainer} from 'lib';\nimport nestedProperty from 'plotly.js/src/lib/nested_property';\n\nexport class UnconnectedDualNumericFraction extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.updatePlot = this.updatePlot.bind(this);\n    this.updatePlot2 = this.updatePlot2.bind(this);\n  }\n\n  updatePlot(value) {\n    this.props.updatePlot(this.props.percentage ? value / 100 : value);\n  }\n\n  updatePlot2(value) {\n    this.props.updateContainer({\n      [this.props.attr2]: this.props.percentage ? value / 100 : value,\n    });\n  }\n\n  render() {\n    const {percentage, multiValued, attr2, step, min, max} = this.props;\n    let fullValue = percentage ? Math.round(100 * this.props.fullValue) : this.props.fullValue;\n    let fullValue2 = nestedProperty(this.context.fullContainer, attr2).get();\n    if (percentage) {\n      fullValue2 = Math.round(100 * fullValue2);\n    }\n    let placeholder;\n    let placeholder2;\n    if (multiValued) {\n      placeholder = fullValue;\n      placeholder2 = fullValue2;\n      fullValue = '';\n      fullValue2 = '';\n    }\n\n    return (\n      <Field {...this.props}>\n        <div className=\"numeric-input__wrapper\">\n          <NumericInput\n            value={fullValue}\n            defaultValue={this.props.defaultValue}\n            placeholder={placeholder}\n            step={step}\n            min={min}\n            max={max}\n            onChange={this.updatePlot}\n            onUpdate={this.updatePlot}\n            showArrows={!this.props.hideArrows}\n            showSlider={false}\n          />\n          <NumericInput\n            value={fullValue2}\n            defaultValue={this.props.defaultValue}\n            placeholder={placeholder2}\n            step={step}\n            min={min}\n            max={max}\n            onChange={this.updatePlot2}\n            onUpdate={this.updatePlot2}\n            showArrows={!this.props.hideArrows}\n            showSlider={false}\n          />\n        </div>\n      </Field>\n    );\n  }\n}\n\nUnconnectedDualNumericFraction.propTypes = {\n  defaultValue: PropTypes.any,\n  fullValue: PropTypes.any,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  multiValued: PropTypes.bool,\n  hideArrows: PropTypes.bool,\n  showSlider: PropTypes.bool,\n  step: PropTypes.number,\n  updatePlot: PropTypes.func,\n  attr2: PropTypes.any,\n  percentage: PropTypes.bool,\n  ...Field.propTypes,\n};\n\nUnconnectedDualNumericFraction.contextTypes = {\n  fullContainer: PropTypes.object,\n};\n\nexport default connectToContainer(UnconnectedDualNumericFraction);\n"]}