{"version":3,"sources":["../../../src/components/fields/MarkerColor.js"],"names":["UnconnectedMarkerColor","props","context","type","container","marker","colorsrc","Array","isArray","color","fullContainer","state","value","constant","fullValue","COLORS","mutedBlue","variable","selectedConstantColorOption","multiValued","setType","bind","setColor","setColorScale","onConstantColorOptionChange","setState","updatePlot","updateContainer","colorscale","inputValue","includes","MULTI_VALUED","_","localize","attr","noSplitsPresent","transforms","filter","t","length","options","label","isMultiValued","renderConstantControls","renderVariableControls","Component","propTypes","PropTypes","any","func","Field","contextTypes","traceIndexes","array","object"],"mappings":"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","file":"MarkerColor.js","sourcesContent":["import Field from './Field';\nimport PropTypes from 'prop-types';\nimport React, {Component, Fragment} from 'react';\nimport {connectToContainer} from 'lib';\nimport RadioBlocks from '../widgets/RadioBlocks';\nimport MultiColorPicker from './MultiColorPicker';\nimport ColorscalePicker from './ColorscalePicker';\nimport Numeric from './Numeric';\nimport Radio from './Radio';\nimport Info from './Info';\nimport DataSelector from './DataSelector';\nimport VisibilitySelect from './VisibilitySelect';\nimport {MULTI_VALUED, COLORS} from 'lib/constants';\n\nclass UnconnectedMarkerColor extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    let type = null;\n    if (!props.container.marker || (props.container.marker && !props.container.marker.colorsrc)) {\n      type = 'constant';\n    } else if (\n      props.container.marker &&\n      Array.isArray(props.container.marker.color) &&\n      props.fullContainer.marker &&\n      Array.isArray(props.fullContainer.marker.color)\n    ) {\n      type = 'variable';\n    }\n\n    this.state = {\n      type,\n      value: {\n        constant: type === 'constant' ? props.fullValue : COLORS.mutedBlue,\n        variable: type === 'variable' ? props.fullValue : null,\n      },\n      selectedConstantColorOption: type === 'constant' && props.multiValued ? 'multiple' : 'single',\n    };\n\n    this.setType = this.setType.bind(this);\n    this.setColor = this.setColor.bind(this);\n    this.setColorScale = this.setColorScale.bind(this);\n    this.onConstantColorOptionChange = this.onConstantColorOptionChange.bind(this);\n  }\n\n  setType(type) {\n    if (this.state.type !== type) {\n      this.setState({type: type});\n      this.props.updatePlot(this.state.value[type]);\n      if (type === 'constant') {\n        this.context.updateContainer({\n          ['marker.colorsrc']: null,\n          ['marker.colorscale']: null,\n          ['marker.showscale']: null,\n        });\n        this.setState({colorscale: null});\n      } else {\n        this.context.updateContainer({\n          ['marker.color']: null,\n          ['marker.colorsrc']: null,\n          ['marker.colorscale']: [],\n        });\n      }\n    }\n  }\n\n  setColor(inputValue) {\n    const {type} = this.state;\n\n    this.setState(\n      type === 'constant' ? {value: {constant: inputValue}} : {value: {variable: inputValue}}\n    );\n    this.props.updatePlot(inputValue);\n  }\n\n  setColorScale(inputValue) {\n    this.setState({colorscale: inputValue});\n    this.context.updateContainer({['marker.colorscale']: inputValue});\n  }\n\n  isMultiValued() {\n    return (\n      this.props.multiValued ||\n      (Array.isArray(this.props.fullValue) && this.props.fullValue.includes(MULTI_VALUED)) ||\n      (this.props.container.marker &&\n        this.props.container.marker.colorscale &&\n        this.props.container.marker.colorscale === MULTI_VALUED) ||\n      (this.props.container.marker &&\n        this.props.container.marker.colorsrc &&\n        this.props.container.marker.colorsrc === MULTI_VALUED) ||\n      (this.props.container.marker &&\n        this.props.container.marker.color &&\n        Array.isArray(this.props.container.marker.color) &&\n        this.props.container.marker.color.includes(MULTI_VALUED))\n    );\n  }\n\n  onConstantColorOptionChange(value) {\n    this.setState({\n      selectedConstantColorOption: value,\n    });\n  }\n\n  renderConstantControls() {\n    const _ = this.context.localize;\n    return (\n      <MultiColorPicker\n        attr=\"marker.color\"\n        multiColorMessage={_('Each trace will be colored according to the selected colorscale.')}\n        singleColorMessage={_('All traces will be colored in the the same color.')}\n        setColor={this.setColor}\n        setColorScale={this.setColorScale}\n        onConstantColorOptionChange={this.onConstantColorOptionChange}\n        parentSelectedConstantColorOption={this.state.selectedConstantColorOption}\n      />\n    );\n  }\n\n  renderVariableControls() {\n    const multiValued =\n      this.props.container &&\n      this.props.container.marker &&\n      ((this.props.container.marker.colorscale &&\n        this.props.container.marker.colorscale === MULTI_VALUED) ||\n        (this.props.container.marker.colorsrc &&\n          this.props.container.marker.colorsrc === MULTI_VALUED));\n    return (\n      <Field multiValued={multiValued}>\n        <DataSelector suppressMultiValuedMessage attr=\"marker.color\" />\n        {this.props.container.marker &&\n        this.props.container.marker.colorscale === MULTI_VALUED ? null : (\n          <ColorscalePicker\n            suppressMultiValuedMessage\n            attr=\"marker.colorscale\"\n            updatePlot={this.setColorScale}\n            colorscale={this.state.colorscale}\n          />\n        )}\n      </Field>\n    );\n  }\n\n  render() {\n    const {attr} = this.props;\n    const {localize: _, container} = this.context;\n\n    // TO DO: https://github.com/plotly/react-chart-editor/issues/654\n    const noSplitsPresent =\n      container &&\n      (!container.transforms || !container.transforms.filter(t => t.type === 'groupby').length);\n\n    if (noSplitsPresent) {\n      const {type} = this.state;\n      const options = [\n        {label: _('Constant'), value: 'constant'},\n        {label: _('Variable'), value: 'variable'},\n      ];\n\n      return (\n        <Fragment>\n          <Field {...this.props} attr={attr}>\n            <Field multiValued={this.isMultiValued() && !this.state.type}>\n              <RadioBlocks options={options} activeOption={type} onOptionChange={this.setType} />\n\n              {!type ? null : (\n                <Info>\n                  {type === 'constant'\n                    ? _('All points in a trace are colored in the same color.')\n                    : _('Each point in a trace is colored according to data.')}\n                </Info>\n              )}\n            </Field>\n\n            {!type\n              ? null\n              : type === 'constant'\n                ? this.renderConstantControls()\n                : this.renderVariableControls()}\n          </Field>\n          {type === 'constant' ? null : (\n            <Fragment>\n              <Radio\n                label={_('Colorscale Direction')}\n                attr=\"marker.reversescale\"\n                options={[{label: _('Normal'), value: false}, {label: _('Reversed'), value: true}]}\n              />\n              <Radio\n                label={_('Color Bar')}\n                attr=\"marker.showscale\"\n                options={[{label: _('Show'), value: true}, {label: _('Hide'), value: false}]}\n              />\n              <VisibilitySelect\n                label={_('Colorscale Range')}\n                attr=\"marker.cauto\"\n                options={[{label: _('Auto'), value: true}, {label: _('Custom'), value: false}]}\n                showOn={false}\n                defaultOpt={true}\n              >\n                <Numeric label={_('Min')} attr=\"marker.cmin\" />\n                <Numeric label={_('Max')} attr=\"marker.cmax\" />\n              </VisibilitySelect>\n            </Fragment>\n          )}\n        </Fragment>\n      );\n    }\n\n    return (\n      <Field {...this.props} attr={attr}>\n        {this.renderConstantControls()}\n      </Field>\n    );\n  }\n}\n\nUnconnectedMarkerColor.propTypes = {\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  ...Field.propTypes,\n};\n\nUnconnectedMarkerColor.contextTypes = {\n  localize: PropTypes.func,\n  updateContainer: PropTypes.func,\n  traceIndexes: PropTypes.array,\n  container: PropTypes.object,\n};\n\nexport default connectToContainer(UnconnectedMarkerColor);\n"]}