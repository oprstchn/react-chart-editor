{"version":3,"sources":["../../../src/components/fields/GroupCreator.js"],"names":["UnconnectedGroupCreator","Set","context","data","map","t","props","attr","filter","Boolean","g","fullContainer","currentGroup","currentTraceIndex","index","MULTI_VALUED","getAllGroups","length","fullData","some","d","allGroups","parseInt","Number","isInteger","n","push","lastGroupNumber","Math","max","apply","updatePlot","_","localize","label","prefix","options","value","forEach","sort","a","b","icon","addButton","canAddGroup","addAndUpdateGroup","Component","propTypes","PropTypes","string","object","Field","contextType","EditorControlsContext"],"mappings":"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","file":"GroupCreator.js","sourcesContent":["import React, {Component} from 'react';\nimport {connectToContainer} from 'lib';\nimport Field from './Field';\nimport Dropdown from './Dropdown';\nimport PropTypes from 'prop-types';\nimport Button from '../widgets/Button';\nimport {PlusIcon} from 'plotly-icons';\nimport {MULTI_VALUED} from 'lib/constants';\nimport {EditorControlsContext} from '../../context';\n\nclass UnconnectedGroupCreator extends Component {\n  getAllGroups() {\n    return [...new Set(this.context.data.map(t => t[this.props.attr]))].filter(g => Boolean(g));\n  }\n\n  canAddGroup() {\n    const {fullContainer, attr} = this.props;\n    const currentGroup = fullContainer[attr];\n    const currentTraceIndex = fullContainer.index;\n\n    if (fullContainer.index === MULTI_VALUED) {\n      return this.getAllGroups().length === 0;\n    }\n\n    return (\n      !currentGroup ||\n      this.context.fullData.some(d => d.index !== currentTraceIndex && d[attr] === currentGroup)\n    );\n  }\n\n  addAndUpdateGroup() {\n    const allGroups = this.context.fullData\n      .map(t => parseInt(t[this.props.attr], 10))\n      .filter(n => Number.isInteger(n));\n    // don't want to pass empty array to max\n    allGroups.push(0);\n\n    const lastGroupNumber = Math.max.apply(Math, allGroups);\n\n    this.props.updatePlot(lastGroupNumber + 1);\n  }\n\n  render() {\n    const {localize: _} = this.context;\n    const {attr, label, prefix, updatePlot} = this.props;\n\n    const options = [{label: _('None'), value: ''}];\n    const allGroups = this.getAllGroups();\n    allGroups.forEach(g => options.push({label: `${prefix} ${g}`, value: g}));\n    options.sort((a, b) => a.value - b.value);\n\n    const icon = <PlusIcon />;\n    const addButton = this.canAddGroup() ? (\n      <Button variant=\"no-text\" icon={icon} onClick={() => this.addAndUpdateGroup()} />\n    ) : (\n      <Button variant=\"no-text--disabled\" icon={icon} onClick={() => {}} />\n    );\n\n    return (\n      <Dropdown\n        label={label}\n        attr={attr}\n        clearable={false}\n        options={options}\n        updatePlot={updatePlot}\n        extraComponent={addButton}\n      />\n    );\n  }\n}\n\nUnconnectedGroupCreator.propTypes = {\n  attr: PropTypes.string,\n  fullContainer: PropTypes.object,\n  prefix: PropTypes.string,\n  ...Field.propTypes,\n};\n\nUnconnectedGroupCreator.contextType = EditorControlsContext;\n\nexport default connectToContainer(UnconnectedGroupCreator);\n"]}