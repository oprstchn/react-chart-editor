{"version":3,"sources":["../../../src/components/fields/PieColorscalePicker.js"],"names":["UnconnectedPieColorscalePicker","props","onUpdate","bind","colorscale","colorscaleType","Array","isArray","numPieSlices","context","graphDiv","calcdata","length","adjustedColorscale","repeat","updatePlot","fullValue","Component","propTypes","PropTypes","any","func","Field","contextTypes","container","object","modifyPlotProps","plotProps","map","d","color","traceIndexes","isVisible"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEMA,8B;;;AACJ,0CAAYC,KAAZ,EAAmB;AAAA;;AAAA,gKACXA,KADW;;AAEjB,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AAFiB;AAGlB;;;;6BAEQC,U,EAAYC,c,EAAgB;AACnC,UAAIC,MAAMC,OAAN,CAAcH,UAAd,CAAJ,EAA+B;AAC7B,YAAMI,eAAe,KAAKC,OAAL,CAAaC,QAAb,CAAsBC,QAAtB,CAA+B,CAA/B,EAAkCC,MAAlC,GAA2C,CAAhE;AACA,YAAMC,qBAAqB,2BAAiBT,UAAjB,EAA6BI,YAA7B,EAA2CH,cAA3C,EAA2D;AACpFS,kBAAQ;AAD4E,SAA3D,CAA3B;AAGA,aAAKb,KAAL,CAAWc,UAAX,CAAsBF,kBAAtB;AACD;AACF;;;6BAEQ;AAAA,UACAG,SADA,GACa,KAAKf,KADlB,CACAe,SADA;;AAEP,UAAMZ,aAAaE,MAAMC,OAAN,CAAcS,SAAd,IAA2BA,SAA3B,GAAuC,IAA1D;;AAEA,aACE;AAAC,uBAAD;AAAW,aAAKf,KAAhB;AACE,sCAAC,0BAAD;AACE,oBAAUG,UADZ;AAEE,8BAAoB,KAAKF,QAF3B;AAGE,2BAAgB;AAHlB;AADF,OADF;AASD;;;;EA7B0Ce,gB;;AAgC7CjB,+BAA+BkB,SAA/B;AACEF,aAAWG,oBAAUC,GADvB;AAEEL,cAAYI,oBAAUE;AAFxB,GAGKC,gBAAMJ,SAHX;;AAMAlB,+BAA+BuB,YAA/B,GAA8C;AAC5CC,aAAWL,oBAAUM,MADuB;AAE5Cf,YAAUS,oBAAUM;AAFwB,CAA9C;;kBAKe,6BAAmBzB,8BAAnB,EAAmD;AAChE0B,mBAAiB,yBAACzB,KAAD,EAAQQ,OAAR,EAAiBkB,SAAjB,EAA+B;AAC9C,QACElB,WACAA,QAAQe,SADR,IAEAf,QAAQC,QAFR,KAGC,CAACiB,UAAUX,SAAX,IACEV,MAAMC,OAAN,CAAcoB,UAAUX,SAAxB,KAAsC,CAACW,UAAUX,SAAV,CAAoBJ,MAJ9D,KAKAH,QAAQC,QAAR,CAAiBC,QANnB,EAOE;AACAgB,gBAAUX,SAAV,GAAsBP,QAAQC,QAAR,CAAiBC,QAAjB,CAA0B,CAA1B,EAA6BiB,GAA7B,CAAiC;AAAA,eAAKC,EAAEC,KAAP;AAAA,OAAjC,CAAtB;AACD;;AAED,QAAIrB,QAAQsB,YAAR,CAAqBnB,MAArB,GAA8B,CAAlC,EAAqC;AACnCe,gBAAUK,SAAV,GAAsB,KAAtB;AACD;AACF;AAhB+D,CAAnD,C","file":"PieColorscalePicker.js","sourcesContent":["import ColorscalePickerWidget from '../widgets/ColorscalePicker';\nimport Field from './Field';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectToContainer, adjustColorscale} from 'lib';\n\nclass UnconnectedPieColorscalePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.onUpdate = this.onUpdate.bind(this);\n  }\n\n  onUpdate(colorscale, colorscaleType) {\n    if (Array.isArray(colorscale)) {\n      const numPieSlices = this.context.graphDiv.calcdata[0].length + 1;\n      const adjustedColorscale = adjustColorscale(colorscale, numPieSlices, colorscaleType, {\n        repeat: true,\n      });\n      this.props.updatePlot(adjustedColorscale);\n    }\n  }\n\n  render() {\n    const {fullValue} = this.props;\n    const colorscale = Array.isArray(fullValue) ? fullValue : null;\n\n    return (\n      <Field {...this.props}>\n        <ColorscalePickerWidget\n          selected={colorscale}\n          onColorscaleChange={this.onUpdate}\n          initialCategory=\"categorical\"\n        />\n      </Field>\n    );\n  }\n}\n\nUnconnectedPieColorscalePicker.propTypes = {\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  ...Field.propTypes,\n};\n\nUnconnectedPieColorscalePicker.contextTypes = {\n  container: PropTypes.object,\n  graphDiv: PropTypes.object,\n};\n\nexport default connectToContainer(UnconnectedPieColorscalePicker, {\n  modifyPlotProps: (props, context, plotProps) => {\n    if (\n      context &&\n      context.container &&\n      context.graphDiv &&\n      (!plotProps.fullValue ||\n        (Array.isArray(plotProps.fullValue) && !plotProps.fullValue.length)) &&\n      context.graphDiv.calcdata\n    ) {\n      plotProps.fullValue = context.graphDiv.calcdata[0].map(d => d.color);\n    }\n\n    if (context.traceIndexes.length > 1) {\n      plotProps.isVisible = false;\n    }\n  },\n});\n"]}