{"version":3,"sources":["../../../src/components/fields/Field.js"],"names":["FieldDelete","onClick","props","Component","Field","center","children","label","multiValued","suppressMultiValuedMessage","units","extraComponent","fieldContainerClassName","_","context","localize","fieldClass","Boolean","tooltip","attr","description","replace","containerClassName","showFieldTooltips","propTypes","PropTypes","bool","any","string","node","contextTypes","func","defaultProps"],"mappings":"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","file":"Field.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport MenuPanel from '../containers/MenuPanel';\nimport classnames from 'classnames';\nimport {bem} from 'lib';\nimport {getMultiValueText} from 'lib/constants';\nimport {CloseIcon} from 'plotly-icons';\n\nexport class FieldDelete extends Component {\n  render() {\n    const {onClick} = this.props;\n    return (\n      <div className=\"field__delete\" onClick={onClick}>\n        <CloseIcon />\n      </div>\n    );\n  }\n}\n\nclass Field extends Component {\n  render() {\n    const {\n      center,\n      children,\n      label,\n      multiValued,\n      suppressMultiValuedMessage,\n      units,\n      extraComponent,\n      fieldContainerClassName,\n    } = this.props;\n\n    const {localize: _} = this.context;\n\n    let fieldClass;\n    if (!label) {\n      fieldClass = classnames('field__no-title', {\n        'field__no-title--center': center,\n      });\n    } else {\n      fieldClass = classnames('field__widget', {\n        'field__widget--units': Boolean(units),\n      });\n    }\n\n    let tooltip = this.context.attr;\n    if (this.context.description) {\n      tooltip += ' â€“ ' + this.context.description.replace(/`/g, '\"').replace(/\\*/g, '\"');\n    }\n\n    const containerClassName = classnames(bem('field'), {\n      [fieldContainerClassName]: Boolean(fieldContainerClassName),\n    });\n\n    return (\n      <div className={containerClassName}>\n        {label ? (\n          <div className={bem('field', 'title')}>\n            {this.context.showFieldTooltips ? (\n              <div\n                className={bem('field', 'title-text')}\n                aria-label={tooltip}\n                data-microtip-position=\"bottom-right\"\n                data-microtip-size=\"large\"\n                role=\"tooltip\"\n              >\n                {label}\n              </div>\n            ) : (\n              <div className={bem('field', 'title-text')}>{label}</div>\n            )}\n          </div>\n        ) : null}\n        <div className={fieldClass}>\n          {children}\n          {extraComponent ? extraComponent : null}\n          {multiValued && !suppressMultiValuedMessage ? (\n            <MenuPanel label={getMultiValueText('title', _)} ownline question>\n              <div className=\"info__title\">{getMultiValueText('title', _)}</div>\n              <div className=\"info__text\">{getMultiValueText('text', _)}</div>\n              <div className=\"info__sub-text\">{getMultiValueText('subText', _)}</div>\n            </MenuPanel>\n          ) : null}\n        </div>\n        {units ? (\n          <div className={bem('field', 'units')}>\n            <div className={bem('field', 'units-text')}>{units}</div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nField.propTypes = {\n  center: PropTypes.bool,\n  label: PropTypes.any,\n  units: PropTypes.string,\n  multiValued: PropTypes.bool,\n  suppressMultiValuedMessage: PropTypes.bool,\n  children: PropTypes.node,\n  extraComponent: PropTypes.any,\n  fieldContainerClassName: PropTypes.string,\n};\n\nField.contextTypes = {\n  localize: PropTypes.func,\n  description: PropTypes.string,\n  attr: PropTypes.string,\n  showFieldTooltips: PropTypes.bool,\n};\n\nField.defaultProps = {\n  center: false,\n  multiValued: false,\n};\n\nFieldDelete.propTypes = {\n  onClick: PropTypes.func,\n};\nexport default Field;\n"]}