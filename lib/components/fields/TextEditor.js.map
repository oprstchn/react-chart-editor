{"version":3,"sources":["../../../src/components/fields/TextEditor.js"],"names":["UnconnectedTextEditor","props","attr","container","htmlOnly","latexOnly","multiValued","richTextOnly","updatePlot","_","context","localize","fullValue","placeholder","editor","Component","propTypes","Field","PropTypes","any","bool","func","contextType","EditorControlsContext","modifyPlotProps","plotProps","isVisible"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEMA,qB;;;;;;;;;;;6BACK;AAAA,mBASH,KAAKC,KATF;AAAA,UAELC,IAFK,UAELA,IAFK;AAAA,UAGLC,SAHK,UAGLA,SAHK;AAAA,UAILC,QAJK,UAILA,QAJK;AAAA,UAKLC,SALK,UAKLA,SALK;AAAA,UAMLC,WANK,UAMLA,WANK;AAAA,UAOLC,YAPK,UAOLA,YAPK;AAAA,UAQLC,UARK,UAQLA,UARK;AAAA,UAWUC,CAXV,GAWe,KAAKC,OAXpB,CAWAC,QAXA;;;AAaP,UAAIC,YAAY,KAAKX,KAAL,CAAWW,SAA3B;;AAEA,UAAIC,oBAAJ;AACA,UAAIP,eAAgBM,cAAc,CAACT,SAAD,IAAc,CAACA,UAAUD,IAAV,CAA7B,CAApB,EAAoE;AAClEW,sBAAcD,SAAd;AACAA,oBAAY,EAAZ;AACD;;AAED,UAAIE,eAAJ;;AAEA,UAAIT,SAAJ,EAAe;AACbQ,sBAAcJ,EAAE,4BAAF,CAAd;AACAK,iBAAS,8BAAC,eAAD,IAAO,OAAOF,SAAd,EAAyB,aAAaC,WAAtC,EAAmD,UAAUL,UAA7D,GAAT;AACD,OAHD,MAGO,IAAID,YAAJ,EAAkB;AACvBO,iBAAS,8BAAC,kBAAD,IAAU,OAAOF,SAAjB,EAA4B,aAAaC,WAAzC,EAAsD,UAAUL,UAAhE,GAAT;AACD,OAFM,MAEA,IAAIJ,QAAJ,EAAc;AACnBS,sBAAcJ,EAAE,2BAAF,CAAd;AACAK,iBAAS,8BAAC,cAAD,IAAM,OAAOF,SAAb,EAAwB,aAAaC,WAArC,EAAkD,UAAUL,UAA5D,GAAT;AACD,OAHM,MAGA;AACLM,iBAAS,8BAAC,qBAAD,IAAa,OAAOF,SAApB,EAA+B,aAAaC,WAA5C,EAAyD,UAAUL,UAAnE,GAAT;AACD;;AAED,aACE;AAAC,uBAAD;AAAW,aAAKP,KAAhB;AACE;AAAA;AAAA,YAAK,WAAU,aAAf;AAA8Ba;AAA9B;AADF,OADF;AAKD;;;;EAzCiCC,gB;;AA4CpCf,sBAAsBgB,SAAtB,gBACKC,gBAAMD,SADX;AAEEJ,aAAWM,oBAAUC,GAFvB;AAGEf,YAAUc,oBAAUE,IAHtB;AAIEf,aAAWa,oBAAUE,IAJvB;AAKEb,gBAAcW,oBAAUE,IAL1B;AAMEZ,cAAYU,oBAAUG;AANxB;;AASArB,sBAAsBsB,WAAtB,GAAoCC,8BAApC;;kBAEe,6BAAmBvB,qBAAnB,EAA0C;AACvDwB,mBAAiB,yBAACvB,KAAD,EAAQS,OAAR,EAAiBe,SAAjB,EAA+B;AAC9C,QAAIA,UAAUC,SAAV,IAAuBD,UAAUnB,WAArC,EAAkD;AAChDmB,gBAAUC,SAAV,GAAsB,KAAtB;AACD;AACF;AALsD,CAA1C,C","file":"TextEditor.js","sourcesContent":["import Field from './Field';\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connectToContainer} from 'lib';\nimport LaTeX from '../widgets/text_editors/LaTeX';\nimport RichText from '../widgets/text_editors/RichText';\nimport MultiFormat from '../widgets/text_editors/MultiFormat';\nimport HTML from '../widgets/text_editors/HTML';\nimport {EditorControlsContext} from '../../context';\n\nclass UnconnectedTextEditor extends Component {\n  render() {\n    const {\n      attr,\n      container,\n      htmlOnly,\n      latexOnly,\n      multiValued,\n      richTextOnly,\n      updatePlot,\n    } = this.props;\n\n    const {localize: _} = this.context;\n\n    let fullValue = this.props.fullValue;\n\n    let placeholder;\n    if (multiValued || (fullValue && (!container || !container[attr]))) {\n      placeholder = fullValue;\n      fullValue = '';\n    }\n\n    let editor;\n\n    if (latexOnly) {\n      placeholder = _('Enter LaTeX formatted text');\n      editor = <LaTeX value={fullValue} placeholder={placeholder} onChange={updatePlot} />;\n    } else if (richTextOnly) {\n      editor = <RichText value={fullValue} placeholder={placeholder} onChange={updatePlot} />;\n    } else if (htmlOnly) {\n      placeholder = _('Enter html formatted text');\n      editor = <HTML value={fullValue} placeholder={placeholder} onChange={updatePlot} />;\n    } else {\n      editor = <MultiFormat value={fullValue} placeholder={placeholder} onChange={updatePlot} />;\n    }\n\n    return (\n      <Field {...this.props}>\n        <div className=\"text-editor\">{editor}</div>\n      </Field>\n    );\n  }\n}\n\nUnconnectedTextEditor.propTypes = {\n  ...Field.propTypes,\n  fullValue: PropTypes.any,\n  htmlOnly: PropTypes.bool,\n  latexOnly: PropTypes.bool,\n  richTextOnly: PropTypes.bool,\n  updatePlot: PropTypes.func,\n};\n\nUnconnectedTextEditor.contextType = EditorControlsContext;\n\nexport default connectToContainer(UnconnectedTextEditor, {\n  modifyPlotProps: (props, context, plotProps) => {\n    if (plotProps.isVisible && plotProps.multiValued) {\n      plotProps.isVisible = false;\n    }\n  },\n});\n"]}