{"version":3,"sources":["../../../src/components/widgets/RadioBlocks.js"],"names":["RadioBlocks","props","state","activeOption","handleChange","bind","renderOption","nextProps","setState","newValue","onOptionChange","optionName","label","value","Icon","icon","defaultActive","optionClass","optionList","options","map","groupClass","alignment","Component","propTypes","PropTypes","arrayOf","shape","oneOfType","string","bool","number","isRequired","node","func","disabled","radioClassName"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,W;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,0HACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa,EAACC,cAAc,MAAKF,KAAL,CAAWE,YAA1B,EAAb;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AAJiB;AAKlB;;;;8CAEyBE,S,EAAW;AACnC;AACA,UAAIA,UAAUJ,YAAV,KAA2B,KAAKD,KAAL,CAAWC,YAA1C,EAAwD;AACtD,aAAKK,QAAL,CAAc;AACZL,wBAAcI,UAAUJ;AADZ,SAAd;AAGD;AACF;;;iCAEYM,Q,EAAU;AACrB,WAAKD,QAAL,CAAc,EAACL,cAAcM,QAAf,EAAd;AACA,WAAKR,KAAL,CAAWS,cAAX,CAA0BD,QAA1B;AACD;;;iCAEYE,U,EAAY;AAAA;;AAAA,UAChBC,KADgB,GACYD,UADZ,CAChBC,KADgB;AAAA,UACTC,KADS,GACYF,UADZ,CACTE,KADS;AAAA,UACIC,IADJ,GACYH,UADZ,CACFI,IADE;;AAEvB,UAAMC,gBAAgB,KAAKd,KAAL,CAAWC,YAAX,KAA4BU,KAAlD;;AAEA,UAAMI,cAAc,0BAAW,qBAAX,EAAkC;AACpD,uCAA+BD;AADqB,OAAlC,CAApB;;AAIA,aACE;AAAA;AAAA;AACE,qBAAWC,WADb;AAEE,eAAKJ,KAFP;AAGE,mBAASG,aAHX;AAIE,mBAAS;AAAA,mBAAM,OAAKZ,YAAL,CAAkBS,KAAlB,CAAN;AAAA;AAJX;AAMGC,eAAO,8BAAC,IAAD,IAAM,WAAU,mBAAhB,GAAP,GAAgD,IANnD;AAOGF,gBAAQ;AAAA;AAAA;AAAOA;AAAP,SAAR,GAA+B;AAPlC,OADF;AAWD;;;6BAEQ;AACP,UAAMM,aAAa,KAAKjB,KAAL,CAAWkB,OAAX,CAAmBC,GAAnB,CAAuB,KAAKd,YAA5B,CAAnB;;AAEA,UAAMe,aAAa,0BAAW,aAAX,EAA0B,oBAA1B,EAAgD;AACjE,sCAA8B,KAAKpB,KAAL,CAAWqB,SAAX,KAAyB;AADU,OAAhD,CAAnB;;AAIA,aAAO;AAAA;AAAA,UAAK,WAAWD,UAAhB;AAA6BH;AAA7B,OAAP;AACD;;;;EAnDuBK,gB;;AAsD1BvB,YAAYwB,SAAZ,GAAwB;AACtBL,WAASM,oBAAUC,OAAV,CACPD,oBAAUE,KAAV,CAAgB;AACdd,WAAOY,oBAAUG,SAAV,CAAoB,CAACH,oBAAUI,MAAX,EAAmBJ,oBAAUK,IAA7B,EAAmCL,oBAAUM,MAA7C,CAApB,EAA0EC,UADnE;AAEdpB,WAAOa,oBAAUI,MAFH;AAGdd,UAAMU,oBAAUG,SAAV,CAAoB,CAACH,oBAAUQ,IAAX,EAAiBR,oBAAUS,IAA3B,CAApB,CAHQ;AAIdC,cAAUV,oBAAUK;AAJN,GAAhB,CADO,CADa;AAStBpB,kBAAgBe,oBAAUS,IAAV,CAAeF,UATT;AAUtB7B,gBAAcsB,oBAAUG,SAAV,CAAoB,CAACH,oBAAUI,MAAX,EAAmBJ,oBAAUK,IAA7B,EAAmCL,oBAAUM,MAA7C,CAApB,CAVQ;AAWtBK,kBAAgBX,oBAAUI,MAXJ;;AAatB;AACAP,aAAWG,oBAAUI;AAdC,CAAxB;;kBAiBe7B,W","file":"RadioBlocks.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nclass RadioBlocks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {activeOption: this.props.activeOption};\n    this.handleChange = this.handleChange.bind(this);\n    this.renderOption = this.renderOption.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Reset the value to the graph's actual value\n    if (nextProps.activeOption !== this.state.activeOption) {\n      this.setState({\n        activeOption: nextProps.activeOption,\n      });\n    }\n  }\n\n  handleChange(newValue) {\n    this.setState({activeOption: newValue});\n    this.props.onOptionChange(newValue);\n  }\n\n  renderOption(optionName) {\n    const {label, value, icon: Icon} = optionName;\n    const defaultActive = this.state.activeOption === value;\n\n    const optionClass = classnames('radio-block__option', {\n      'radio-block__option--active': defaultActive,\n    });\n\n    return (\n      <div\n        className={optionClass}\n        key={value}\n        checked={defaultActive}\n        onClick={() => this.handleChange(value)}\n      >\n        {Icon ? <Icon className=\"radio-block__icon\" /> : null}\n        {label ? <span>{label}</span> : null}\n      </div>\n    );\n  }\n\n  render() {\n    const optionList = this.props.options.map(this.renderOption);\n\n    const groupClass = classnames('radio-block', 'radio-block__group', {\n      'radio-block__group--center': this.props.alignment === 'center',\n    });\n\n    return <div className={groupClass}>{optionList}</div>;\n  }\n}\n\nRadioBlocks.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number]).isRequired,\n      label: PropTypes.string,\n      icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      disabled: PropTypes.bool,\n    })\n  ),\n  onOptionChange: PropTypes.func.isRequired,\n  activeOption: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number]),\n  radioClassName: PropTypes.string,\n\n  // One of right, left, center\n  alignment: PropTypes.string,\n};\n\nexport default RadioBlocks;\n"]}