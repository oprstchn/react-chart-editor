{"version":3,"sources":["../../../src/components/widgets/Button.js"],"names":["Button","props","children","className","icon","label","variant","rest","classes","Icon","Component","propTypes","PropTypes","node","any","oneOfType","func","string"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,M;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,2GACXA,KADW;AAElB;;;;6BAEQ;AAAA,mBACsD,KAAKA,KAD3D;AAAA,UACAC,QADA,UACAA,QADA;AAAA,UACUC,SADV,UACUA,SADV;AAAA,UACqBC,IADrB,UACqBA,IADrB;AAAA,UAC2BC,KAD3B,UAC2BA,KAD3B;AAAA,UACkCC,OADlC,UACkCA,OADlC;AAAA,UAC8CC,IAD9C;;AAGP,UAAIC,kBAAJ;;AAEA,UAAIF,OAAJ,EAAa;AACXE,iCAAuBF,OAAvB;AACD,OAFD,MAEO;AACLE;AACD;;AAED,UAAIL,SAAJ,EAAe;AACbK,yBAAeL,SAAf;AACD;;AAED,UAAMM,OAAOL,OAAO;AAAA;AAAA,UAAK,WAAW,cAAI,QAAJ,EAAc,MAAd,CAAhB;AAAwCA;AAAxC,OAAP,GAA6D,IAA1E;;AAEA,aACE;AAAA;AAAA,mBAAQ,WAAWI,OAAnB,IAAgCD,IAAhC;AACE;AAAA;AAAA,YAAK,WAAW,cAAI,QAAJ,EAAc,SAAd,CAAhB;AACGE,cADH;AAEE;AAAA;AAAA,cAAK,WAAU,eAAf;AAAgCJ,oBAAQA,KAAR,GAAgBH;AAAhD;AAFF;AADF,OADF;AAQD;;;;EA9BkBQ,gB;;AAiCrBV,OAAOW,SAAP,GAAmB;AACjBT,YAAUU,oBAAUC,IADH;AAEjBV,aAAWS,oBAAUE,GAFJ;AAGjBV,QAAMQ,oBAAUG,SAAV,CAAoB,CAACH,oBAAUC,IAAX,EAAiBD,oBAAUI,IAA3B,CAApB,CAHW;AAIjBX,SAAOO,oBAAUE,GAJA;AAKjBR,WAASM,oBAAUK;AALF,CAAnB;;kBAQejB,M","file":"Button.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {bem} from 'lib';\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {children, className, icon, label, variant, ...rest} = this.props;\n\n    let classes = `button`;\n\n    if (variant) {\n      classes += ` button--${variant}`;\n    } else {\n      classes += ` button--default`;\n    }\n\n    if (className) {\n      classes += ` ${className}`;\n    }\n\n    const Icon = icon ? <div className={bem('button', 'icon')}>{icon}</div> : null;\n\n    return (\n      <button className={classes} {...rest}>\n        <div className={bem('button', 'wrapper')}>\n          {Icon}\n          <div className=\"button__label\">{label ? label : children}</div>\n        </div>\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.any,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  label: PropTypes.any,\n  variant: PropTypes.string,\n};\n\nexport default Button;\n"]}