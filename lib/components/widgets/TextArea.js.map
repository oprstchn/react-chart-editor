{"version":3,"sources":["../../../src/components/widgets/TextArea.js"],"names":["TextArea","props","state","value","onChange","bind","nextProps","setState","e","newValue","target","visibleRows","areaWidth","placeholder","textareaClass","Component","propTypes","PropTypes","string","isRequired","func","number","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEqBA,Q;;;AACnB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,aAAO,MAAKF,KAAL,CAAWE;AADP,KAAb;;AAIA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AAPiB;AAQlB;;;;8CAEyBC,S,EAAW;AACnC;AACA,UAAIA,UAAUH,KAAV,KAAoB,KAAKD,KAAL,CAAWC,KAAnC,EAA0C;AACxC,aAAKI,QAAL,CAAc;AACZJ,iBAAOG,UAAUH;AADL,SAAd;AAGD;AACF;;;6BAEQK,C,EAAG;AACV,UAAMC,WAAWD,EAAEE,MAAF,CAASP,KAA1B;AACA,WAAKI,QAAL,CAAc,EAACJ,OAAOM,QAAR,EAAd;AACA,WAAKR,KAAL,CAAWG,QAAX,CAAoBK,QAApB;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AACE;AACE,iBAAO,KAAKP,KAAL,CAAWC,KADpB;AAEE,gBAAM,KAAKF,KAAL,CAAWU,WAFnB;AAGE,gBAAM,KAAKV,KAAL,CAAWW,SAHnB;AAIE,uBAAa,KAAKX,KAAL,CAAWY,WAJ1B;AAKE,oBAAU,KAAKT,QALjB;AAME,qBAAW,KAAKH,KAAL,CAAWa;AANxB;AADF,OADF;AAYD;;;;EAvCmCC,gB;;kBAAjBf,Q;;;AA0CrBA,SAASgB,SAAT,GAAqB;AACnBb,SAAOc,oBAAUC,MAAV,CAAiBC,UADL;AAEnBf,YAAUa,oBAAUG,IAAV,CAAeD,UAFN;AAGnBN,eAAaI,oBAAUC,MAAV,CAAiBC,UAHX;AAInBR,eAAaM,oBAAUI,MAJJ;AAKnBT,aAAWK,oBAAUI,MALF;AAMnBP,iBAAeG,oBAAUC;AANN,CAArB;;AASAlB,SAASsB,YAAT,GAAwB;AACtBX,eAAa,EADS;AAEtBC,aAAW;AAFW,CAAxB","file":"TextArea.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class TextArea extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Reset the value to the graph's actual value\n    if (nextProps.value !== this.state.value) {\n      this.setState({\n        value: nextProps.value,\n      });\n    }\n  }\n\n  onChange(e) {\n    const newValue = e.target.value;\n    this.setState({value: newValue});\n    this.props.onChange(newValue);\n  }\n\n  render() {\n    return (\n      <span>\n        <textarea\n          value={this.state.value}\n          rows={this.props.visibleRows}\n          cols={this.props.areaWidth}\n          placeholder={this.props.placeholder}\n          onChange={this.onChange}\n          className={this.props.textareaClass}\n        />\n      </span>\n    );\n  }\n}\n\nTextArea.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  visibleRows: PropTypes.number,\n  areaWidth: PropTypes.number,\n  textareaClass: PropTypes.string,\n};\n\nTextArea.defaultProps = {\n  visibleRows: 10,\n  areaWidth: 30,\n};\n"]}