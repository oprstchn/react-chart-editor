{"version":3,"sources":["../../../src/components/containers/MenuPanel.js"],"names":["MenuPanel","state","isOpen","togglePanel","bind","props","question","Icon","icon","spanClass","setState","show","ownline","label","children","containerClass","getIcon","Component","propTypes","PropTypes","node","oneOfType","func","string","bool"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEqBA,S;;;AACnB,uBAAc;AAAA;;AAAA;;AAEZ,UAAKC,KAAL,GAAa,EAACC,QAAQ,KAAT,EAAb;;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AAJY;AAKb;;;;8BAES;AAAA,mBACuB,KAAKC,KAD5B;AAAA,UACDC,QADC,UACDA,QADC;AAAA,UACeC,IADf,UACSC,IADT;;AAER,UAAIF,QAAJ,EAAc;AACZ,eAAO;AACLE,gBAAM,8BAAC,yBAAD,IAAc,WAAU,iBAAxB,GADD;AAELC;AAFK,SAAP;AAID;AACD,UAAIF,IAAJ,EAAU;AACR,eAAO;AACLC,gBAAM,8BAAC,IAAD,IAAM,WAAU,iBAAhB,GADD;AAELC;AAFK,SAAP;AAID;AACD,aAAO;AACLD,cAAM,8BAAC,oBAAD,IAAS,WAAU,iBAAnB,GADD;AAELC,mBAAW;AAFN,OAAP;AAID;;;kCAEa;AACZ,WAAKC,QAAL,CAAc,EAACR,QAAQ,CAAC,KAAKD,KAAL,CAAWC,MAArB,EAAd;AACD;;;6BAEQ;AAAA,oBACkC,KAAKG,KADvC;AAAA,UACAM,IADA,WACAA,IADA;AAAA,UACMC,OADN,WACMA,OADN;AAAA,UACeC,KADf,WACeA,KADf;AAAA,UACsBC,QADtB,WACsBA,QADtB;;AAEP,UAAMZ,SAASS,QAAQ,KAAKV,KAAL,CAAWC,MAAlC;;AAEA,UAAMa,iBAAiB,0BAAW,WAAX,EAAwB;AAC7C,8BAAsBH;AADuB,OAAxB,CAAvB;;AAJO,qBAQmB,KAAKI,OAAL,EARnB;AAAA,UAQAR,IARA,YAQAA,IARA;AAAA,UAQMC,SARN,YAQMA,SARN;;AAUP,aACE;AAAA;AAAA,UAAK,WAAWM,cAAhB;AACE;AAAA;AAAA,YAAK,WAAWN,SAAhB;AACE;AAAA;AAAA,cAAK,WAAU,kBAAf;AAAmCI;AAAnC,WADF;AAEE;AAAA;AAAA,cAAK,WAAU,0BAAf,EAA0C,SAAS,KAAKV,WAAxD;AACGK;AADH;AAFF,SADF;AAOGN,kBAAU;AAAC,4BAAD;AAAA,YAAU,SAAS,KAAKC,WAAxB;AAAsCW;AAAtC;AAPb,OADF;AAWD;;;;EArDoCG,gB;;kBAAlBjB,S;;;AAwDrBA,UAAUkB,SAAV,GAAsB;AACpBJ,YAAUK,oBAAUC,IADA;AAEpBZ,QAAMW,oBAAUE,SAAV,CAAoB,CAACF,oBAAUC,IAAX,EAAiBD,oBAAUG,IAA3B,CAApB,CAFc;AAGpBT,SAAOM,oBAAUI,MAHG;AAIpBX,WAASO,oBAAUK,IAJC;AAKpBlB,YAAUa,oBAAUK,IALA;AAMpBb,QAAMQ,oBAAUK;AANI,CAAtB","file":"MenuPanel.js","sourcesContent":["import ModalBox from './ModalBox';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport classnames from 'classnames';\nimport {QuestionIcon, CogIcon} from 'plotly-icons';\n\nexport default class MenuPanel extends Component {\n  constructor() {\n    super();\n    this.state = {isOpen: false};\n\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  getIcon() {\n    const {question, icon: Icon} = this.props;\n    if (question) {\n      return {\n        icon: <QuestionIcon className=\"menupanel__icon\" />,\n        spanClass: `menupanel__icon-span menupanel__icon-span--question`,\n      };\n    }\n    if (Icon) {\n      return {\n        icon: <Icon className=\"menupanel__icon\" />,\n        spanClass: `menupanel__icon-span`,\n      };\n    }\n    return {\n      icon: <CogIcon className=\"menupanel__icon\" />,\n      spanClass: 'menupanel__icon-span menupanel__icon-span--cog',\n    };\n  }\n\n  togglePanel() {\n    this.setState({isOpen: !this.state.isOpen});\n  }\n\n  render() {\n    const {show, ownline, label, children} = this.props;\n    const isOpen = show || this.state.isOpen;\n\n    const containerClass = classnames('menupanel', {\n      'menupanel--ownline': ownline,\n    });\n\n    const {icon, spanClass} = this.getIcon();\n\n    return (\n      <div className={containerClass}>\n        <div className={spanClass}>\n          <div className=\"menupanel__label\">{label}</div>\n          <div className=\"menupanel__icon__wrapper\" onClick={this.togglePanel}>\n            {icon}\n          </div>\n        </div>\n        {isOpen && <ModalBox onClose={this.togglePanel}>{children}</ModalBox>}\n      </div>\n    );\n  }\n}\n\nMenuPanel.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  label: PropTypes.string,\n  ownline: PropTypes.bool,\n  question: PropTypes.bool,\n  show: PropTypes.bool,\n};\n"]}