{"version":3,"sources":["../../../src/components/containers/SubplotAccordion.js"],"names":["TraceFold","PlotlyFold","NonCartesianSubplotFold","CartesianSubplotFold","SubplotAccordion","context","data","layout","_","localize","children","props","subplotFolds","allCartesianAxisCombinations","reduce","acc","curVal","inx","TRACE_TO_AXIS","cartesian","some","c","type","xaxis","substring","yaxis","existingComboIndex","findIndex","t","push","xaxisName","yaxisName","index","forEach","d","Object","keys","traceIndexes","subplotName","layoutKey","subplotType","trIndex","SUBPLOT_TO_ATTR","tt","trace","startsWith","pieCounter","tableCounter","i","values","Component","contextType","EditorControlsContext","propTypes","PropTypes","node"],"mappings":"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","file":"SubplotAccordion.js","sourcesContent":["import PlotlyFold from './PlotlyFold';\nimport TraceRequiredPanel from './TraceRequiredPanel';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {\n  connectTraceToPlot,\n  connectCartesianSubplotToLayout,\n  connectNonCartesianSubplotToLayout,\n  getSubplotTitle,\n} from 'lib';\nimport {TRACE_TO_AXIS, SUBPLOT_TO_ATTR} from 'lib/constants';\nimport {EditorControlsContext} from '../../context';\n\nconst TraceFold = connectTraceToPlot(PlotlyFold);\nconst NonCartesianSubplotFold = connectNonCartesianSubplotToLayout(PlotlyFold);\nconst CartesianSubplotFold = connectCartesianSubplotToLayout(PlotlyFold);\n\nclass SubplotAccordion extends Component {\n  render() {\n    const {data = [], layout = {}, localize: _} = this.context;\n    const {children} = this.props;\n    const subplotFolds = [];\n\n    const allCartesianAxisCombinations = data.reduce((acc, curVal, inx) => {\n      if (TRACE_TO_AXIS.cartesian.some(c => c === curVal.type)) {\n        const xaxis = 'xaxis' + (curVal.xaxis ? curVal.xaxis.substring(1) : '');\n        const yaxis = 'yaxis' + (curVal.yaxis ? curVal.yaxis.substring(1) : '');\n\n        const existingComboIndex = acc.findIndex(t => t.xaxis === xaxis && t.yaxis === yaxis);\n        if (existingComboIndex === -1) {\n          acc.push({\n            xaxis: xaxis,\n            yaxis: yaxis,\n            xaxisName: curVal.xaxis ? getSubplotTitle(curVal.xaxis, 'x', _) : 'X 1',\n            yaxisName: curVal.yaxis ? getSubplotTitle(curVal.yaxis, 'y', _) : 'Y 1',\n            index: [inx],\n          });\n        } else {\n          acc[existingComboIndex].index.push(inx);\n        }\n      }\n      return acc;\n    }, []);\n\n    allCartesianAxisCombinations.forEach(\n      d =>\n        (subplotFolds[d.index[0]] = (\n          <CartesianSubplotFold\n            key={d.index[0]}\n            traceIndexes={d.index}\n            canDelete={false}\n            xaxis={d.xaxis}\n            yaxis={d.yaxis}\n            name={`${d.xaxisName} | ${d.yaxisName}`}\n          >\n            {children}\n          </CartesianSubplotFold>\n        ))\n    );\n\n    // For each key in layout, find all traces that belong to this subplot.\n    // E.g. if layout attr is 'ternary', find all traces that are of type\n    // that has subplot ternary, if layout attr is 'ternary2', find traces\n    // of right type that have attr 'subplot': 'ternary' in their data.\n\n    /**\n    Example: \n    {\n      \"data\": [\n        {\n          \"type\": \"scatterternary\",\n          \"mode\": \"markers\",\n        },\n        {\n          \"type\": \"scatterternary\",\n          \"mode\": \"markers\",\n          \"subplot\": \"ternary2\"\n        }\n      ],\n      \"layout\": {\n        \"ternary\": {},\n        \"ternary2\": {},\n      },\n    }\n     */\n\n    Object.keys(layout).forEach(layoutKey => {\n      const traceIndexes = [];\n      let subplotName;\n      if (\n        ['geo', 'mapbox', 'polar', 'gl3d', 'ternary'].some(subplotType => {\n          subplotName = getSubplotTitle(layoutKey, subplotType, _);\n          const trIndex =\n            SUBPLOT_TO_ATTR[subplotType].layout === layoutKey\n              ? data.findIndex(trace => TRACE_TO_AXIS[subplotType].some(tt => tt === trace.type))\n              : data.findIndex(trace => trace[SUBPLOT_TO_ATTR[subplotType].data] === layoutKey);\n          if (trIndex !== -1) {\n            traceIndexes.push(trIndex);\n          }\n          return layoutKey.startsWith(SUBPLOT_TO_ATTR[subplotType].layout);\n        })\n      ) {\n        subplotFolds[traceIndexes[0]] = (\n          <NonCartesianSubplotFold\n            key={layoutKey}\n            traceIndexes={traceIndexes}\n            canDelete={false}\n            subplot={layoutKey}\n            name={subplotName}\n          >\n            {children}\n          </NonCartesianSubplotFold>\n        );\n      }\n    });\n\n    let pieCounter = 0;\n    let tableCounter = 0;\n    data.forEach((d, i) => {\n      if ((d.type === 'pie' && d.values) || d.type === 'table') {\n        if (d.type === 'pie') {\n          pieCounter++;\n        } else if (d.type === 'table') {\n          tableCounter++;\n        }\n        subplotFolds[i] = (\n          <TraceFold\n            key={i}\n            traceIndexes={[i]}\n            canDelete={false}\n            name={\n              d.type === 'pie'\n                ? `${_('Pie')} ${pieCounter > 1 ? pieCounter : ''}`\n                : `${_('Table')} ${tableCounter > 1 ? tableCounter : ''}`\n            }\n          >\n            {children}\n          </TraceFold>\n        );\n      }\n    });\n\n    return <TraceRequiredPanel>{subplotFolds}</TraceRequiredPanel>;\n  }\n}\n\nSubplotAccordion.contextType = EditorControlsContext;\n\nSubplotAccordion.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default SubplotAccordion;\n"]}