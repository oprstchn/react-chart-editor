{"version":3,"sources":["../../../src/components/containers/AnnotationAccordion.js"],"names":["AnnotationFold","PlotlyFold","AnnotationAccordion","context","layout","annotations","_","localize","props","canAdd","children","content","length","map","ann","i","text","addAction","label","handler","updateContainer","annotationIndex","Array","isArray","key","value","Component","contextType","EditorControlsContext","propTypes","PropTypes","node","bool"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,iBAAiB,oCAA0BC,oBAA1B,CAAvB;;IAEMC,mB;;;;;;;;;;;6BACK;AAAA,qBAIH,KAAKC,OAJF;AAAA,2CAELC,MAFK,CAEIC,WAFJ;AAAA,UAEIA,WAFJ,yCAEkB,EAFlB;AAAA,UAGKC,CAHL,YAGLC,QAHK;AAAA,mBAKoB,KAAKC,KALzB;AAAA,UAKAC,MALA,UAKAA,MALA;AAAA,UAKQC,QALR,UAKQA,QALR;;;AAOP,UAAMC,UACJN,YAAYO,MAAZ,IACAP,YAAYQ,GAAZ,CAAgB,UAACC,GAAD,EAAMC,CAAN;AAAA,eACd;AAAC,wBAAD;AAAA,YAAgB,KAAKA,CAArB,EAAwB,iBAAiBA,CAAzC,EAA4C,MAAMD,IAAIE,IAAtD,EAA4D,WAAWP,MAAvE;AACGC;AADH,SADc;AAAA,OAAhB,CAFF;;AAQA,UAAMO,YAAY;AAChBC,eAAOZ,EAAE,YAAF,CADS;AAEhBa,iBAAS,uBAA+B;AAAA,cAA7Bf,MAA6B,QAA7BA,MAA6B;AAAA,cAArBgB,eAAqB,QAArBA,eAAqB;;AACtC,cAAIC,wBAAJ;AACA,cAAIC,MAAMC,OAAN,CAAcnB,OAAOC,WAArB,CAAJ,EAAuC;AACrCgB,8BAAkBjB,OAAOC,WAAP,CAAmBO,MAArC;AACD,WAFD,MAEO;AACLS,8BAAkB,CAAlB;AACD;;AAED,cAAMG,uBAAqBH,eAArB,MAAN;AACA,cAAMI,QAAQ,EAACT,MAAMV,EAAE,UAAF,CAAP,EAAd;;AAEA,cAAIc,eAAJ,EAAqB;AACnBA,gDAAkBI,GAAlB,EAAwBC,KAAxB;AACD;AACF;AAhBe,OAAlB;;AAmBA,aACE;AAAC,4BAAD;AAAA,UAAa,WAAWhB,SAASQ,SAAT,GAAqB,IAA7C;AACGN,kBACCA,OADD,GAGC;AAAC,kCAAD;AAAA,YAAc,SAASL,EAAE,qBAAF,CAAvB;AACE;AAAA;AAAA;AACGA,cACC,yFADD;AADH,WADF;AAME;AAAA;AAAA;AAAIA,cAAE,mDAAF;AAAJ;AANF;AAJJ,OADF;AAgBD;;;;EAnD+BoB,gB;;AAsDlCxB,oBAAoByB,WAApB,GAAkCC,+BAAlC;;AAEA1B,oBAAoB2B,SAApB,GAAgC;AAC9BnB,YAAUoB,oBAAUC,IADU;AAE9BtB,UAAQqB,oBAAUE;AAFY,CAAhC;;kBAKe9B,mB","file":"AnnotationAccordion.js","sourcesContent":["import PlotlyFold from './PlotlyFold';\nimport {LayoutPanel} from './derived';\nimport {PanelMessage} from './PanelEmpty';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectAnnotationToLayout} from 'lib';\nimport {EditorControlsContext} from '../../context';\n\nconst AnnotationFold = connectAnnotationToLayout(PlotlyFold);\n\nclass AnnotationAccordion extends Component {\n  render() {\n    const {\n      layout: {annotations = []},\n      localize: _,\n    } = this.context;\n    const {canAdd, children} = this.props;\n\n    const content =\n      annotations.length &&\n      annotations.map((ann, i) => (\n        <AnnotationFold key={i} annotationIndex={i} name={ann.text} canDelete={canAdd}>\n          {children}\n        </AnnotationFold>\n      ));\n\n    const addAction = {\n      label: _('Annotation'),\n      handler: ({layout, updateContainer}) => {\n        let annotationIndex;\n        if (Array.isArray(layout.annotations)) {\n          annotationIndex = layout.annotations.length;\n        } else {\n          annotationIndex = 0;\n        }\n\n        const key = `annotations[${annotationIndex}]`;\n        const value = {text: _('new text')};\n\n        if (updateContainer) {\n          updateContainer({[key]: value});\n        }\n      },\n    };\n\n    return (\n      <LayoutPanel addAction={canAdd ? addAction : null}>\n        {content ? (\n          content\n        ) : (\n          <PanelMessage heading={_('Call out your data.')}>\n            <p>\n              {_(\n                'Annotations are text and arrows you can use to point out specific parts of your figure.'\n              )}\n            </p>\n            <p>{_('Click on the + button above to add an annotation.')}</p>\n          </PanelMessage>\n        )}\n      </LayoutPanel>\n    );\n  }\n}\n\nAnnotationAccordion.contextType = EditorControlsContext;\n\nAnnotationAccordion.propTypes = {\n  children: PropTypes.node,\n  canAdd: PropTypes.bool,\n};\n\nexport default AnnotationAccordion;\n"]}