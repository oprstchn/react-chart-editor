{"version":3,"sources":["../../../src/components/containers/PanelHeader.js"],"names":["PanelHeader","state","addPanelOpen","togglePanel","bind","setState","_","context","localize","props","children","addAction","allowCollapse","toggleFolds","hasOpen","icon","length","Array","isArray","handler","label","map","Component","contextTypes","layout","PropTypes","object","fullContainer","onUpdate","func","updateContainer","propTypes","bool","node"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEMA,W;;;AACJ,yBAAc;AAAA;;AAAA;;AAEZ,UAAKC,KAAL,GAAa,EAACC,cAAc,KAAf,EAAb;;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AAJY;AAKb;;;;kCAEa;AACZ,WAAKC,QAAL,CAAc,EAACH,cAAc,CAAC,KAAKD,KAAL,CAAWC,YAA3B,EAAd;AACD;;;6BAEQ;AAAA;;AAAA,UACUI,CADV,GACe,KAAKC,OADpB,CACAC,QADA;AAAA,mBAE4D,KAAKC,KAFjE;AAAA,UAEAC,QAFA,UAEAA,QAFA;AAAA,UAEUC,SAFV,UAEUA,SAFV;AAAA,UAEqBC,aAFrB,UAEqBA,aAFrB;AAAA,UAEoCC,WAFpC,UAEoCA,WAFpC;AAAA,UAEiDC,OAFjD,UAEiDA,OAFjD;;AAIP;;AACA,UAAMC,OAAO,8BAAC,qBAAD,OAAb;AACA,aAAO,CAACL,QAAD,IAAa,CAACC,SAAd,IAA2B,CAACC,aAA5B,GAA4C,IAA5C,GACL;AAAA;AAAA,UAAK,WAAU,eAAf;AACGF,oBAAYA,SAASM,MAArB,GACC;AAAA;AAAA,YAAK,WAAU,wBAAf;AAAyCN;AAAzC,SADD,GAEG,IAHN;AAIE;AAAA;AAAA,YAAK,WAAU,mCAAf;AACGE,0BACC;AAAA;AAAA,cAAK,WAAU,yBAAf,EAAyC,SAASC,WAAlD;AACGC,sBACC;AAAA;AAAA;AACE,4CAAC,2BAAD,OADF;AAEGR,gBAAE,cAAF;AAFH,aADD,GAMC;AAAA;AAAA;AACE,4CAAC,yBAAD,OADF;AAEGA,gBAAE,YAAF;AAFH;AAPJ,WADD,GAcG,IAfN;AAiBGK,sBACC;AAAA;AAAA,cAAK,WAAU,0CAAf;AACE,0CAAC,gBAAD;AACE,uBAAQ,SADV;AAEE,yBAAU,eAFZ;AAGE,uBACEM,MAAMC,OAAN,CAAcP,UAAUQ,OAAxB,IACI,KAAKhB,WADT,GAEI;AAAA,uBAAMQ,UAAUQ,OAAV,CAAkB,OAAKZ,OAAvB,CAAN;AAAA,eANR;AAQE,oBAAMQ,IARR;AASE,qBAAOJ,UAAUS;AATnB,cADF;AAYG,iBAAKnB,KAAL,CAAWC,YAAX,IACC;AAAA;AAAA,gBAAK,WAAU,QAAf;AACE;AAAA;AAAA,kBAAK,WAAU,mBAAf;AACE;AAAA;AAAA,oBAAK,WAAU,aAAf;AACGS,4BAAUQ,OAAV,CAAkBE,GAAlB,CAAsB;AAAA,wBAAED,KAAF,QAAEA,KAAF;AAAA,wBAASD,OAAT,QAASA,OAAT;AAAA,2BACrB;AAAA;AAAA;AACE,mCAAU,eADZ;AAEE,6BAAKC,KAFP;AAGE,iCAAS,mBAAM;AACbD,kCAAQ,OAAKZ,OAAb;AACA,iCAAKJ,WAAL;AACD;AANH;AAQGiB;AARH,qBADqB;AAAA,mBAAtB;AADH;AADF;AADF;AAbJ,WADD,GAkCG;AAnDN;AAJF,OADF;AA4DD;;;;EA9EuBE,gB;;AAiF1BtB,YAAYuB,YAAZ,GAA2B;AACzBC,UAAQC,oBAAUC,MADO;AAEzBC,iBAAeF,oBAAUC,MAFA;AAGzBE,YAAUH,oBAAUI,IAHK;AAIzBC,mBAAiBL,oBAAUI,IAJF;AAKzBrB,YAAUiB,oBAAUI;AALK,CAA3B;;AAQA7B,YAAY+B,SAAZ,GAAwB;AACtBpB,aAAWc,oBAAUC,MADC;AAEtBd,iBAAea,oBAAUO,IAFH;AAGtBtB,YAAUe,oBAAUQ,IAHE;AAItBnB,WAASW,oBAAUO,IAJG;AAKtBnB,eAAaY,oBAAUI;AALD,CAAxB;;kBAQe7B,W","file":"PanelHeader.js","sourcesContent":["import Button from 'components/widgets/Button';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {PlusIcon, ResizeUpIcon, ResizeDownIcon} from 'plotly-icons';\n\nclass PanelHeader extends Component {\n  constructor() {\n    super();\n    this.state = {addPanelOpen: false};\n\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  togglePanel() {\n    this.setState({addPanelOpen: !this.state.addPanelOpen});\n  }\n\n  render() {\n    const {localize: _} = this.context;\n    const {children, addAction, allowCollapse, toggleFolds, hasOpen} = this.props;\n\n    // dropdown is styled with same styles as react-select component - see _dropdown.scss\n    const icon = <PlusIcon />;\n    return !children && !addAction && !allowCollapse ? null : (\n      <div className=\"panel__header\">\n        {children && children.length ? (\n          <div className=\"panel__header__content\">{children}</div>\n        ) : null}\n        <div className=\"panel__header__actions__container\">\n          {allowCollapse ? (\n            <div className=\"panel__header__collapse\" onClick={toggleFolds}>\n              {hasOpen ? (\n                <span>\n                  <ResizeDownIcon />\n                  {_('Collapse All')}\n                </span>\n              ) : (\n                <span>\n                  <ResizeUpIcon />\n                  {_('Expand All')}\n                </span>\n              )}\n            </div>\n          ) : null}\n\n          {addAction ? (\n            <div className=\"panel__header__action dropdown-container\">\n              <Button\n                variant=\"primary\"\n                className=\"js-add-button\"\n                onClick={\n                  Array.isArray(addAction.handler)\n                    ? this.togglePanel\n                    : () => addAction.handler(this.context)\n                }\n                icon={icon}\n                label={addAction.label}\n              />\n              {this.state.addPanelOpen && (\n                <div className=\"Select\">\n                  <div className=\"Select-menu-outer\">\n                    <div className=\"Select-menu\">\n                      {addAction.handler.map(({label, handler}) => (\n                        <div\n                          className=\"Select-option\"\n                          key={label}\n                          onClick={() => {\n                            handler(this.context);\n                            this.togglePanel();\n                          }}\n                        >\n                          {label}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nPanelHeader.contextTypes = {\n  layout: PropTypes.object,\n  fullContainer: PropTypes.object,\n  onUpdate: PropTypes.func,\n  updateContainer: PropTypes.func,\n  localize: PropTypes.func,\n};\n\nPanelHeader.propTypes = {\n  addAction: PropTypes.object,\n  allowCollapse: PropTypes.bool,\n  children: PropTypes.node,\n  hasOpen: PropTypes.bool,\n  toggleFolds: PropTypes.func,\n};\n\nexport default PanelHeader;\n"]}