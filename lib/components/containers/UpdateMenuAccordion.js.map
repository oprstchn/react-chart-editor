{"version":3,"sources":["../../../src/components/containers/UpdateMenuAccordion.js"],"names":["UpdateMenuFold","PlotlyFold","UpdateMenuAccordion","context","fullLayout","updatemenus","_","localize","children","props","content","length","map","upd","i","localizedType","dropdown","buttons","menuType","type","activeBtn","filter","b","_index","active","foldName","label","Component","contextType","EditorControlsContext","propTypes","PropTypes","node"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,iBAAiB,oCAA0BC,oBAA1B,CAAvB;;IAEMC,mB;;;;;;;;;;;6BACK;AAAA,qBAIH,KAAKC,OAJF;AAAA,2CAELC,UAFK,CAEQC,WAFR;AAAA,UAEQA,WAFR,yCAEsB,EAFtB;AAAA,UAGKC,CAHL,YAGLC,QAHK;AAAA,UAKAC,QALA,GAKY,KAAKC,KALjB,CAKAD,QALA;;;AAOP,UAAME,UACJL,YAAYM,MAAZ,GAAqB,CAArB,IACAN,YAAYO,GAAZ,CAAgB,UAACC,GAAD,EAAMC,CAAN,EAAY;AAC1B,YAAMC,gBAAgB;AACpBC,oBAAUV,EAAE,UAAF,CADU;AAEpBW,mBAASX,EAAE,SAAF;AAFW,SAAtB;AAIA,YAAMY,WAAWH,cAAcF,IAAIM,IAAlB,KAA2BJ,cAAcC,QAA1D;AACA,YAAMI,YAAYP,IAAII,OAAJ,CAAYI,MAAZ,CAAmB;AAAA,iBAAKC,EAAEC,MAAF,KAAaV,IAAIW,MAAtB;AAAA,SAAnB,EAAiD,CAAjD,CAAlB;AACA,YAAMC,WAAWP,YAAYE,YAAY,OAAOA,UAAUM,KAA7B,GAAqC,EAAjD,CAAjB;;AAEA,eACE;AAAC,wBAAD;AAAA,YAAgB,KAAKZ,CAArB,EAAwB,iBAAiBA,CAAzC,EAA4C,MAAMW,QAAlD;AACGjB;AADH,SADF;AAKD,OAdD,CAFF;;AAkBA,aAAO;AAAC,oCAAD;AAAA;AAAqBE,kBAAUA,OAAV,GAAoB;AAAzC,OAAP;AACD;;;;EA3B+BiB,gB;;AA8BlCzB,oBAAoB0B,WAApB,GAAkCC,+BAAlC;;AAEA3B,oBAAoB4B,SAApB,GAAgC;AAC9BtB,YAAUuB,oBAAUC;AADU,CAAhC;;kBAIe9B,mB","file":"UpdateMenuAccordion.js","sourcesContent":["import PlotlyFold from './PlotlyFold';\nimport TraceRequiredPanel from './TraceRequiredPanel';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectUpdateMenuToLayout} from 'lib';\nimport {EditorControlsContext} from '../../context';\n\nconst UpdateMenuFold = connectUpdateMenuToLayout(PlotlyFold);\n\nclass UpdateMenuAccordion extends Component {\n  render() {\n    const {\n      fullLayout: {updatemenus = []},\n      localize: _,\n    } = this.context;\n    const {children} = this.props;\n\n    const content =\n      updatemenus.length > 0 &&\n      updatemenus.map((upd, i) => {\n        const localizedType = {\n          dropdown: _('Dropdown'),\n          buttons: _('Buttons'),\n        };\n        const menuType = localizedType[upd.type] || localizedType.dropdown;\n        const activeBtn = upd.buttons.filter(b => b._index === upd.active)[0];\n        const foldName = menuType + (activeBtn ? ': ' + activeBtn.label : '');\n\n        return (\n          <UpdateMenuFold key={i} updateMenuIndex={i} name={foldName}>\n            {children}\n          </UpdateMenuFold>\n        );\n      });\n\n    return <TraceRequiredPanel>{content ? content : null}</TraceRequiredPanel>;\n  }\n}\n\nUpdateMenuAccordion.contextType = EditorControlsContext;\n\nUpdateMenuAccordion.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default UpdateMenuAccordion;\n"]}