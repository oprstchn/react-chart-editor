{"version":3,"sources":["../src/PlotlyEditor.js"],"names":["PlotlyEditor","props","state","graphDiv","PlotComponent","plotly","handleRender","bind","fig","setState","onRender","data","layout","_transitionData","_frames","hideControls","dataSources","dataSourceOptions","onUpdate","advancedTraceTypeSelector","locale","traceTypesConfig","dictionaries","showFieldTooltips","srcConverters","makeDefaultTrace","glByDefault","Boolean","config","mapboxAccessToken","fontOptions","chartHelp","optionalPanel","menuPanelOrder","updatePayload","children","width","height","frames","useResizeHandler","debug","divId","Component","propTypes","PropTypes","any","object","array","func","bool","string","shape","toSrc","isRequired","fromSrc","defaultProps","DEFAULT_FONTS"],"mappings":"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","file":"PlotlyEditor.js","sourcesContent":["import React, {Component} from 'react';\nimport createPlotComponent from 'react-plotly.js/factory';\nimport EditorControls from './EditorControls';\nimport PropTypes from 'prop-types';\nimport {DEFAULT_FONTS} from 'lib/constants';\n\nclass PlotlyEditor extends Component {\n  constructor(props) {\n    super();\n    this.state = {graphDiv: {}};\n    this.PlotComponent = createPlotComponent(props.plotly);\n    this.handleRender = this.handleRender.bind(this);\n  }\n\n  handleRender(fig, graphDiv) {\n    this.setState({graphDiv});\n    if (this.props.onRender) {\n      this.props.onRender(graphDiv.data, graphDiv.layout, graphDiv._transitionData._frames);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"plotly_editor\">\n        {!this.props.hideControls && (\n          <EditorControls\n            graphDiv={this.state.graphDiv}\n            dataSources={this.props.dataSources}\n            dataSourceOptions={this.props.dataSourceOptions}\n            plotly={this.props.plotly}\n            onUpdate={this.props.onUpdate}\n            advancedTraceTypeSelector={this.props.advancedTraceTypeSelector}\n            locale={this.props.locale}\n            traceTypesConfig={this.props.traceTypesConfig}\n            dictionaries={this.props.dictionaries}\n            showFieldTooltips={this.props.showFieldTooltips}\n            srcConverters={this.props.srcConverters}\n            makeDefaultTrace={this.props.makeDefaultTrace}\n            glByDefault={this.props.glByDefault}\n            mapBoxAccess={Boolean(this.props.config && this.props.config.mapboxAccessToken)}\n            fontOptions={this.props.fontOptions}\n            chartHelp={this.props.chartHelp}\n            optionalPanel={this.props.optionalPanel}\n            menuPanelOrder={this.props.menuPanelOrder}\n            updatePayload={this.props.updatePayload}\n          >\n            {this.props.children}\n          </EditorControls>\n        )}\n        <div className=\"plotly_editor_plot\" style={{width: '100%', height: '100%'}}>\n          <this.PlotComponent\n            data={this.props.data}\n            layout={this.props.layout}\n            frames={this.props.frames}\n            config={this.props.config}\n            useResizeHandler={this.props.useResizeHandler}\n            debug={this.props.debug}\n            onInitialized={this.handleRender}\n            onUpdate={this.handleRender}\n            style={{width: '100%', height: '100%'}}\n            divId={this.props.divId}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nPlotlyEditor.propTypes = {\n  children: PropTypes.any,\n  layout: PropTypes.object,\n  data: PropTypes.array,\n  config: PropTypes.object,\n  dataSourceOptions: PropTypes.array,\n  dataSources: PropTypes.object,\n  frames: PropTypes.array,\n  onUpdate: PropTypes.func,\n  onRender: PropTypes.func,\n  plotly: PropTypes.object,\n  useResizeHandler: PropTypes.bool,\n  debug: PropTypes.bool,\n  advancedTraceTypeSelector: PropTypes.bool,\n  locale: PropTypes.string,\n  traceTypesConfig: PropTypes.object,\n  dictionaries: PropTypes.object,\n  divId: PropTypes.string,\n  hideControls: PropTypes.bool,\n  showFieldTooltips: PropTypes.bool,\n  srcConverters: PropTypes.shape({\n    toSrc: PropTypes.func.isRequired,\n    fromSrc: PropTypes.func.isRequired,\n  }),\n  makeDefaultTrace: PropTypes.func,\n  glByDefault: PropTypes.bool,\n  fontOptions: PropTypes.array,\n  chartHelp: PropTypes.object,\n  optionalPanel: PropTypes.any,\n  menuPanelOrder: PropTypes.array,\n  updatePayload: PropTypes.array,\n};\n\nPlotlyEditor.defaultProps = {\n  hideControls: false,\n  showFieldTooltips: false,\n  fontOptions: DEFAULT_FONTS,\n};\n\nexport default PlotlyEditor;\n"]}