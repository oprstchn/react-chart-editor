{"version":3,"sources":["../../src/lib/connectRangeSelectorToAxis.js"],"names":["connectRangeSelectorToAxis","WrappedComponent","RangeSelectorConnectedComponent","props","context","deleteRangeselector","bind","updateRangeselector","setLocals","nextProps","nextContext","rangeselectorIndex","container","fullContainer","rangeselectors","rangeselector","buttons","fullRangeselectors","getValObject","attr","updateContainer","deleteContainer","update","newUpdate","key","newkey","onUpdate","type","EDITOR_ACTIONS","DELETE_RANGESELECTOR","payload","axisId","_name","Component","displayName","propTypes","PropTypes","number","isRequired","contextTypes","object","data","array","func","childContextTypes","plotly_editor_traits"],"mappings":"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","file":"connectRangeSelectorToAxis.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {getDisplayName} from '../lib';\nimport {EDITOR_ACTIONS} from './constants';\n\nexport default function connectRangeSelectorToAxis(WrappedComponent) {\n  class RangeSelectorConnectedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.deleteRangeselector = this.deleteRangeselector.bind(this);\n      this.updateRangeselector = this.updateRangeselector.bind(this);\n      this.setLocals(props, context);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      this.setLocals(nextProps, nextContext);\n    }\n\n    setLocals(props, context) {\n      const {rangeselectorIndex} = props;\n      const {container, fullContainer} = context;\n\n      const rangeselectors = container.rangeselector ? container.rangeselector.buttons || [] : [];\n      const fullRangeselectors = fullContainer.rangeselector\n        ? fullContainer.rangeselector.buttons || []\n        : [];\n      this.container = rangeselectors[rangeselectorIndex];\n      this.fullContainer = fullRangeselectors[rangeselectorIndex];\n    }\n\n    getChildContext() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject\n            ? null\n            : this.context.getValObject(`rangeselector.buttons[].${attr}`),\n        updateContainer: this.updateRangeselector,\n        deleteContainer: this.deleteRangeselector,\n        container: this.container,\n        fullContainer: this.fullContainer,\n      };\n    }\n\n    provideValue() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject\n            ? null\n            : this.context.getValObject(`rangeselector.buttons[].${attr}`),\n        updateContainer: this.updateRangeselector,\n        deleteContainer: this.deleteRangeselector,\n        container: this.container,\n        fullContainer: this.fullContainer,\n      };\n    }\n\n    updateRangeselector(update) {\n      const newUpdate = {};\n      const {rangeselectorIndex} = this.props;\n      for (const key in update) {\n        const newkey = `rangeselector.buttons[${rangeselectorIndex}].${key}`;\n        newUpdate[newkey] = update[key];\n      }\n      this.context.updateContainer(newUpdate);\n    }\n\n    deleteRangeselector() {\n      if (this.context.onUpdate) {\n        this.context.onUpdate({\n          type: EDITOR_ACTIONS.DELETE_RANGESELECTOR,\n          payload: {\n            axisId: this.context.fullContainer._name,\n            rangeselectorIndex: this.props.rangeselectorIndex,\n          },\n        });\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  RangeSelectorConnectedComponent.displayName = `RangeSelectorConnected${getDisplayName(\n    WrappedComponent\n  )}`;\n\n  RangeSelectorConnectedComponent.propTypes = {\n    rangeselectorIndex: PropTypes.number.isRequired,\n  };\n\n  RangeSelectorConnectedComponent.contextTypes = {\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    data: PropTypes.array,\n    onUpdate: PropTypes.func,\n    updateContainer: PropTypes.func,\n    getValObject: PropTypes.func,\n  };\n\n  RangeSelectorConnectedComponent.childContextTypes = {\n    updateContainer: PropTypes.func,\n    deleteContainer: PropTypes.func,\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    getValObject: PropTypes.func,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  RangeSelectorConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return RangeSelectorConnectedComponent;\n}\n"]}