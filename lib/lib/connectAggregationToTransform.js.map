{"version":3,"sources":["../../src/lib/connectAggregationToTransform.js"],"names":["connectAggregationToTransform","WrappedComponent","AggregationConnectedComponent","props","context","updateAggregation","bind","setLocals","nextProps","nextContext","aggregationIndex","container","fullContainer","aggregations","fullAggregations","getValObject","attr","updateContainer","update","newUpdate","path","key","target","Component","displayName","propTypes","PropTypes","number","isRequired","contextTypes","object","data","array","onUpdate","func","childContextTypes","deleteContainer","plotly_editor_traits"],"mappings":"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","file":"connectAggregationToTransform.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {getDisplayName} from '../lib';\n\nexport default function connectAggregationToTransform(WrappedComponent) {\n  class AggregationConnectedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.updateAggregation = this.updateAggregation.bind(this);\n      this.setLocals(props, context);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      this.setLocals(nextProps, nextContext);\n    }\n\n    setLocals(props, context) {\n      const {aggregationIndex} = props;\n      const {container, fullContainer} = context;\n\n      const aggregations = (container && container.aggregations) || [];\n      const fullAggregations = fullContainer.aggregations || [];\n      this.container = aggregations[aggregationIndex];\n      this.fullContainer = fullAggregations[aggregationIndex];\n    }\n\n    getChildContext() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject ? null : this.context.getValObject(`aggregations[].${attr}`),\n        updateContainer: this.updateAggregation,\n        container: this.container,\n        fullContainer: this.fullContainer,\n      };\n    }\n\n    provideValue() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject ? null : this.context.getValObject(`aggregations[].${attr}`),\n        updateContainer: this.updateAggregation,\n        container: this.container,\n        fullContainer: this.fullContainer,\n      };\n    }\n\n    updateAggregation(update) {\n      const newUpdate = {};\n      const path = `aggregations[${this.props.aggregationIndex}]`;\n      for (const key in update) {\n        newUpdate[`${path}.${key}`] = update[key];\n      }\n      newUpdate[`${path}.target`] = this.fullContainer.target;\n      newUpdate[`${path}.enabled`] = true;\n      this.context.updateContainer(newUpdate);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  AggregationConnectedComponent.displayName = `AggregationConnected${getDisplayName(\n    WrappedComponent\n  )}`;\n\n  AggregationConnectedComponent.propTypes = {\n    aggregationIndex: PropTypes.number.isRequired,\n  };\n\n  AggregationConnectedComponent.contextTypes = {\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    data: PropTypes.array,\n    onUpdate: PropTypes.func,\n    updateContainer: PropTypes.func,\n    getValObject: PropTypes.func,\n  };\n\n  AggregationConnectedComponent.childContextTypes = {\n    updateContainer: PropTypes.func,\n    deleteContainer: PropTypes.func,\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    getValObject: PropTypes.func,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  AggregationConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return AggregationConnectedComponent;\n}\n"]}