{"version":3,"sources":["../../src/lib/connectTransformToTrace.js"],"names":["connectTransformToTrace","WrappedComponent","TransformConnectedComponent","props","context","deleteTransform","bind","updateTransform","setLocals","nextProps","nextContext","transformIndex","container","fullContainer","transforms","fullTransforms","getValObject","attr","updateContainer","deleteContainer","update","newUpdate","key","newkey","onUpdate","type","EDITOR_ACTIONS","DELETE_TRANSFORM","payload","traceIndex","index","Component","displayName","propTypes","PropTypes","number","isRequired","contextTypes","object","data","array","func","childContextTypes","plotly_editor_traits"],"mappings":"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","file":"connectTransformToTrace.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {getDisplayName} from '../lib';\nimport {EDITOR_ACTIONS} from './constants';\n\nexport default function connectTransformToTrace(WrappedComponent) {\n  class TransformConnectedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.deleteTransform = this.deleteTransform.bind(this);\n      this.updateTransform = this.updateTransform.bind(this);\n      this.setLocals(props, context);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      this.setLocals(nextProps, nextContext);\n    }\n\n    setLocals(props, context) {\n      const {transformIndex} = props;\n      const {container, fullContainer} = context;\n\n      const transforms = container.transforms || [];\n      const fullTransforms = fullContainer.transforms || [];\n      this.container = transforms[transformIndex];\n      this.fullContainer = fullTransforms[transformIndex];\n    }\n\n    getChildContext() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject ? null : this.context.getValObject(`transforms[].${attr}`),\n        updateContainer: this.updateTransform,\n        deleteContainer: this.deleteTransform,\n        container: this.container,\n        fullContainer: this.fullContainer,\n      };\n    }\n\n    provideValue() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject ? null : this.context.getValObject(`transforms[].${attr}`),\n        updateContainer: this.updateTransform,\n        deleteContainer: this.deleteTransform,\n        container: this.container,\n        fullContainer: this.fullContainer,\n      };\n    }\n\n    updateTransform(update) {\n      const newUpdate = {};\n      const {transformIndex} = this.props;\n      for (const key in update) {\n        const newkey = `transforms[${transformIndex}].${key}`;\n        newUpdate[newkey] = update[key];\n      }\n      this.context.updateContainer(newUpdate);\n    }\n\n    deleteTransform() {\n      if (this.context.onUpdate) {\n        this.context.onUpdate({\n          type: EDITOR_ACTIONS.DELETE_TRANSFORM,\n          payload: {\n            traceIndex: this.context.fullContainer.index,\n            transformIndex: this.props.transformIndex,\n          },\n        });\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  TransformConnectedComponent.displayName = `TransformConnected${getDisplayName(WrappedComponent)}`;\n\n  TransformConnectedComponent.propTypes = {\n    transformIndex: PropTypes.number.isRequired,\n  };\n\n  TransformConnectedComponent.contextTypes = {\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    data: PropTypes.array,\n    onUpdate: PropTypes.func,\n    updateContainer: PropTypes.func,\n    getValObject: PropTypes.func,\n  };\n\n  TransformConnectedComponent.childContextTypes = {\n    updateContainer: PropTypes.func,\n    deleteContainer: PropTypes.func,\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    getValObject: PropTypes.func,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  TransformConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return TransformConnectedComponent;\n}\n"]}