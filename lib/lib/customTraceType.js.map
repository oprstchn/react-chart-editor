{"version":3,"sources":["../../src/lib/customTraceType.js"],"names":["plotlyTraceToCustomTrace","traceTypeToPlotlyInitFigure","trace","Error","gl","type","endsWith","slice","length","undefined","includes","stackgroup","fill","mode","traceType","scatterTrace","decreasing","line","color","COLORS","middleGray","increasing","blueTeal","fillcolor","boxpoints","bandwidth","marker","colors","orientation","sizeref"],"mappings":"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","file":"customTraceType.js","sourcesContent":["import {COLORS} from 'lib/constants';\n\nexport function plotlyTraceToCustomTrace(trace) {\n  if (typeof trace !== 'object') {\n    throw new Error(\n      `trace provided to plotlyTraceToCustomTrace function should be an object, received ${typeof trace}`\n    );\n  }\n\n  const gl = 'gl';\n  const type = trace.type\n    ? trace.type.endsWith(gl)\n      ? trace.type.slice(0, -gl.length)\n      : trace.type\n    : 'scatter';\n\n  if (\n    (type === 'scatter' || type === 'scattergl') &&\n    (![null, undefined, ''].includes(trace.stackgroup) || // eslint-disable-line no-undefined\n      ['tozeroy', 'tozerox', 'tonexty', 'tonextx', 'toself', 'tonext'].includes(trace.fill))\n  ) {\n    return 'area';\n  } else if (\n    (type === 'scatter' || type === 'scattergl') &&\n    (trace.mode === 'lines' || trace.mode === 'lines+markers')\n  ) {\n    return 'line';\n  } else if (type === 'scatter3d' && trace.mode === 'lines') {\n    return 'line3d';\n  }\n  return type;\n}\n\nexport function traceTypeToPlotlyInitFigure(traceType, gl = '') {\n  const scatterTrace = {type: 'scatter' + gl, mode: 'markers', stackgroup: null};\n\n  switch (traceType) {\n    case 'line':\n      return {type: 'scatter' + gl, mode: 'lines', stackgroup: null};\n    case 'scatter':\n      return scatterTrace;\n    case undefined: // eslint-disable-line\n      return scatterTrace;\n    case 'area':\n      return {type: 'scatter' + gl, mode: 'lines', stackgroup: 1};\n    case 'scatterpolar':\n      return {type: 'scatterpolar' + gl};\n    case 'ohlc':\n      return {\n        type: 'ohlc',\n        decreasing: {line: {color: COLORS.middleGray}},\n        increasing: {line: {color: COLORS.blueTeal}},\n      };\n    case 'candlestick':\n      return {\n        type: 'candlestick',\n        decreasing: {\n          line: {color: COLORS.middleGray},\n          fillcolor: 'rgba(127, 127, 127, 0.5)',\n        },\n        increasing: {\n          line: {color: COLORS.blueTeal},\n          fillcolor: 'rgba(23, 190, 207, 0.5)',\n        },\n      };\n    case 'box':\n      return {\n        type: 'box',\n        boxpoints: false,\n      };\n    case 'violin':\n      return {\n        type: 'violin',\n        bandwidth: 0,\n      };\n    case 'line3d':\n      return {\n        type: 'scatter3d',\n        mode: 'lines',\n      };\n    case 'scatter3d':\n      return {\n        type: 'scatter3d',\n        mode: 'markers',\n      };\n    case 'pie':\n      return {\n        marker: {\n          colors: [],\n        },\n        type: 'pie',\n      };\n    case 'bar':\n      return {\n        orientation: 'v',\n        type: 'bar',\n      };\n    case 'cone':\n      return {\n        sizeref: 1,\n        type: 'cone',\n      };\n    default:\n      return {type: traceType};\n  }\n}\n"]}