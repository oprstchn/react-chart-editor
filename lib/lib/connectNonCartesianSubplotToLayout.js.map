{"version":3,"sources":["../../src/lib/connectNonCartesianSubplotToLayout.js"],"names":["connectNonCartesianSubplotToLayout","WrappedComponent","SubplotConnectedComponent","props","context","updateSubplot","bind","setLocals","nextProps","nextContext","subplot","traceIndexes","container","fullContainer","data","trace","length","fullTrace","icon","name","getValObject","attr","updateContainer","update","newUpdate","key","Component","displayName","propTypes","PropTypes","string","isRequired","contextTypes","object","array","fullData","onUpdate","func","childContextTypes","deleteContainer","plotly_editor_traits"],"mappings":"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","file":"connectNonCartesianSubplotToLayout.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {getDisplayName, plotlyTraceToCustomTrace, renderTraceIcon, getFullTrace} from '../lib';\n\nexport default function connectNonCartesianSubplotToLayout(WrappedComponent) {\n  class SubplotConnectedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.updateSubplot = this.updateSubplot.bind(this);\n      this.setLocals(props, context);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      this.setLocals(nextProps, nextContext);\n    }\n\n    setLocals(props, context) {\n      const {subplot, traceIndexes} = props;\n      const {container, fullContainer, data} = context;\n\n      this.container = container[subplot] || {};\n      this.fullContainer = fullContainer[subplot] || {};\n\n      const trace = traceIndexes.length > 0 ? data[traceIndexes[0]] : {};\n      const fullTrace = getFullTrace(props, context);\n\n      if (trace && fullTrace) {\n        this.icon = renderTraceIcon(plotlyTraceToCustomTrace(trace));\n        this.name = fullTrace.name;\n      }\n    }\n\n    getChildContext() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject\n            ? null\n            : this.context.getValObject(`${this.props.subplot}.${attr}`),\n        updateContainer: this.updateSubplot,\n        container: this.container,\n        fullContainer: this.fullContainer,\n      };\n    }\n\n    provideValue() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject\n            ? null\n            : this.context.getValObject(`${this.props.subplot}.${attr}`),\n        updateContainer: this.updateSubplot,\n        container: this.container,\n        fullContainer: this.fullContainer,\n      };\n    }\n\n    updateSubplot(update) {\n      const newUpdate = {};\n      for (const key in update) {\n        newUpdate[`${this.props.subplot}.${key}`] = update[key];\n      }\n      this.context.updateContainer(newUpdate);\n    }\n\n    render() {\n      return <WrappedComponent name={this.name} icon={this.icon} {...this.props} />;\n    }\n  }\n\n  SubplotConnectedComponent.displayName = `SubplotConnected${getDisplayName(WrappedComponent)}`;\n\n  SubplotConnectedComponent.propTypes = {\n    subplot: PropTypes.string.isRequired,\n  };\n\n  SubplotConnectedComponent.contextTypes = {\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    data: PropTypes.array,\n    fullData: PropTypes.array,\n    onUpdate: PropTypes.func,\n    updateContainer: PropTypes.func,\n    getValObject: PropTypes.func,\n  };\n\n  SubplotConnectedComponent.childContextTypes = {\n    updateContainer: PropTypes.func,\n    deleteContainer: PropTypes.func,\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    getValObject: PropTypes.func,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  SubplotConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return SubplotConnectedComponent;\n}\n"]}