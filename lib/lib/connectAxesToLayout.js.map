{"version":3,"sources":["../../src/lib/connectAxesToLayout.js"],"names":["connectAxesToLayout","computeAxesOptions","axes","props","context","_","localize","filteredAxes","axisFilter","filter","options","i","length","ax","label","_name","split","value","_subplot","includes","trim","axisGroup","_axisGroup","title","concat","WrappedComponent","AxesConnectedComponent","fullContainer","axesOptions","defaultAxesTarget","state","axesTarget","axesTargetHandler","bind","updateContainer","setLocals","nextProps","nextState","nextContext","container","multiValuedContainer","slice","forEach","Object","keys","key","searchArrays","defaultContainer","get","getValObject","attr","setState","update","newUpdate","j","subplot","axesKey","newkey","Component","displayName","contextTypes","PropTypes","object","isRequired","func","childContextTypes","array","string","plotly_editor_traits"],"mappings":";;;;;;;;;;kBAiCwBA,mB;;AAjCxB;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;AAEA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,OAAzC,EAAkD;AAChD,MAAMC,IAAID,QAAQE,QAAlB;AACA,MAAIC,eAAeL,IAAnB;AACA,MAAIC,MAAMK,UAAV,EAAsB;AACpBD,mBAAeL,KAAKO,MAAL,CAAYN,MAAMK,UAAlB,CAAf;AACD;;AAED,MAAME,UAAU,EAAhB;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,aAAaK,MAAjC,EAAyCD,GAAzC,EAA8C;AAC5C,QAAME,KAAKN,aAAaI,CAAb,CAAX;AACA,QAAMG,QAAQ,qBAAWD,GAAGE,KAAH,CAASC,KAAT,CAAe,MAAf,EAAuB,CAAvB,CAAX,CAAd;AACA,QAAMC,QAAQ,CAACJ,GAAGK,QAAH,IAAe,CAACL,GAAGK,QAAH,CAAYC,QAAZ,CAAqB,OAArB,CAAhB,IAAiD,CAACN,GAAGK,QAAH,CAAYC,QAAZ,CAAqB,OAArB,CAAlD,GACXN,GAAGK,QAAH,GAAc,GAAd,GAAoBL,GAAGE,KADZ,GAEXF,GAAGK,QAFO,EAGZE,IAHY,EAAd;;AAKAV,YAAQC,CAAR,IAAa;AACXG,kBADW;AAEXG,kBAFW;AAGXI,iBAAWR,GAAGS,UAHH;AAIXC,aAAO,uBAAaV,EAAb;AAJI,KAAb;AAMD;;AAED,SAAOH,QAAQE,MAAR,GAAiB,CAAjB,GAAqB,CAAC,EAACE,OAAOT,EAAE,KAAF,CAAR,EAAkBY,OAAO,SAAzB,EAAD,EAAsCO,MAAtC,CAA6Cd,OAA7C,CAArB,GAA6EA,OAApF;AACD;;AAEc,SAASV,mBAAT,CAA6ByB,gBAA7B,EAA+C;AAAA,MACtDC,sBADsD;AAAA;;AAE1D,oCAAYvB,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,kJACpBD,KADoB,EACbC,OADa;;AAG1B,YAAKF,IAAL,GAAY,qBAAWE,QAAQuB,aAAnB,CAAZ;AACA,YAAKC,WAAL,GAAmB3B,mBAAmB,MAAKC,IAAxB,EAA8BC,KAA9B,EAAqCC,OAArC,CAAnB;;AAEA;AACA;AACA,UAAIyB,oBAAoB,IAAxB;AACA,UAAI,MAAKD,WAAL,CAAiBhB,MAAjB,KAA4B,CAAhC,EAAmC;AACjCiB,4BAAoB,MAAKD,WAAL,CAAiB,CAAjB,EAAoBX,KAAxC;AACD;AACD,UAAI,MAAKW,WAAL,CAAiBhB,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BiB,4BAAoB,MAAKD,WAAL,CAAiB,CAAjB,EAAoBX,KAAxC;AACD;;AAED,YAAKa,KAAL,GAAa;AACXC,oBAAYF;AADD,OAAb;;AAIA,YAAKG,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AACA,YAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,OAAvB;;AAEA,YAAKE,SAAL,CAAehC,KAAf,EAAsB,MAAK2B,KAA3B,EAAkC1B,OAAlC;AAvB0B;AAwB3B;;AA1ByD;AAAA;AAAA,0CA4BtCgC,SA5BsC,EA4B3BC,SA5B2B,EA4BhBC,WA5BgB,EA4BH;AACrD,aAAKpC,IAAL,GAAY,qBAAWoC,YAAYX,aAAvB,CAAZ;AACA,aAAKC,WAAL,GAAmB3B,mBAAmB,KAAKC,IAAxB,EAA8BkC,SAA9B,EAAyCE,WAAzC,CAAnB;AACA;AACA,aAAKH,SAAL,CAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,WAArC;AACD;AAjCyD;AAAA;AAAA,gCAmChDF,SAnCgD,EAmCrCC,SAnCqC,EAmC1BC,WAnC0B,EAmCb;AAAA,YACpCC,SADoC,GACRD,WADQ,CACpCC,SADoC;AAAA,YACzBZ,aADyB,GACRW,WADQ,CACzBX,aADyB;AAAA,YAEpCI,UAFoC,GAEtBM,SAFsB,CAEpCN,UAFoC;;;AAI3C,YAAIA,eAAe,SAAnB,EAA8B;AAC5B,cAAMS,uBAAuB,iCAAe,KAAKtC,IAAL,CAAU,CAAV,CAAf,CAA7B;AACA,eAAKA,IAAL,CAAUuC,KAAV,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B;AAAA,mBACzBC,OAAOC,IAAP,CAAY/B,EAAZ,EAAgB6B,OAAhB,CAAwB;AAAA,qBACtB,0CAAwBF,oBAAxB,EAA8C,iCAAe3B,EAAf,CAA9C,EAAkEgC,GAAlE,EAAuE;AACrEC,8BAAc;AADuD,eAAvE,CADsB;AAAA,aAAxB,CADyB;AAAA,WAA3B;AAOA,eAAKnB,aAAL,GAAqBa,oBAArB;AACA,eAAKO,gBAAL,GAAwB,KAAK7C,IAAL,CAAU,CAAV,CAAxB;AACA,eAAKqC,SAAL,GAAiB,EAAjB;AACD,SAZD,MAYO,IAAIR,UAAJ,EAAgB;AACrB,eAAKJ,aAAL,GAAqB,+BAAeA,aAAf,EAA8BI,UAA9B,EAA0CiB,GAA1C,EAArB;AACA,eAAKT,SAAL,GAAiB,KAAKA,SAAL,GAAiB,+BAAeA,SAAf,EAA0BR,UAA1B,EAAsCiB,GAAtC,MAA+C,EAAjF;AACD;AACF;AAvDyD;AAAA;AAAA,wCAyDxC;AAAA;;AAChB,eAAO;AACLC,wBAAc;AAAA,mBACZ,CAAC,OAAK7C,OAAL,CAAa6C,YAAd,GACI,IADJ,GAEI,OAAK7C,OAAL,CAAa6C,YAAb,CAA6B,OAAKnB,KAAL,CAAWC,UAAxC,SAAsDmB,IAAtD,CAHQ;AAAA,WADT;AAKLtB,uBAAa,KAAKA,WALb;AAMLG,sBAAY,KAAKD,KAAL,CAAWC,UANlB;AAOLC,6BAAmB,KAAKA,iBAPnB;AAQLO,qBAAW,KAAKA,SARX;AASLQ,4BAAkB,KAAKA,gBATlB;AAULpB,yBAAe,KAAKA,aAVf;AAWLO,2BAAiB,KAAKA;AAXjB,SAAP;AAaD;AAvEyD;AAAA;AAAA,qCAyE3C;AAAA;;AACb,eAAO;AACLe,wBAAc;AAAA,mBACZ,CAAC,OAAK7C,OAAL,CAAa6C,YAAd,GACI,IADJ,GAEI,OAAK7C,OAAL,CAAa6C,YAAb,CAA6B,OAAKnB,KAAL,CAAWC,UAAxC,SAAsDmB,IAAtD,CAHQ;AAAA,WADT;AAKLtB,uBAAa,KAAKA,WALb;AAMLG,sBAAY,KAAKD,KAAL,CAAWC,UANlB;AAOLC,6BAAmB,KAAKA,iBAPnB;AAQLO,qBAAW,KAAKA,SARX;AASLQ,4BAAkB,KAAKA,gBATlB;AAULpB,yBAAe,KAAKA,aAVf;AAWLO,2BAAiB,KAAKA;AAXjB,SAAP;AAaD;AAvFyD;AAAA;AAAA,wCAyFxCH,UAzFwC,EAyF5B;AAC5B,aAAKoB,QAAL,CAAc,EAACpB,sBAAD,EAAd;AACD;AA3FyD;AAAA;AAAA,sCA6F1CqB,MA7F0C,EA6FlC;AACtB,YAAMC,YAAY,EAAlB;AADsB,YAEftB,UAFe,GAED,KAAKD,KAFJ,CAEfC,UAFe;;;AAItB,YAAI7B,OAAO,KAAKA,IAAhB;AACA,YAAI6B,eAAe,SAAnB,EAA8B;AAC5B;AACA7B,iBAAO,CAAC,KAAKyB,aAAN,CAAP;AACD;;AAED,YAAMiB,OAAOD,OAAOC,IAAP,CAAYQ,MAAZ,CAAb;AACA,aAAK,IAAIzC,IAAI,CAAb,EAAgBA,IAAIiC,KAAKhC,MAAzB,EAAiCD,GAAjC,EAAsC;AACpC,eAAK,IAAI2C,IAAI,CAAb,EAAgBA,IAAIpD,KAAKU,MAAzB,EAAiC0C,GAAjC,EAAsC;AACpC,gBAAMC,UAAUrD,KAAKoD,CAAL,EAAQpC,QAAxB;AACA,gBAAIsC,UAAUtD,KAAKoD,CAAL,EAAQvC,KAAtB;;AAEA,gBAAIwC,WAAW,CAACA,QAAQpC,QAAR,CAAiB,OAAjB,CAAZ,IAAyC,CAACoC,QAAQpC,QAAR,CAAiB,OAAjB,CAA9C,EAAyE;AACvEqC,wBAAaD,OAAb,SAAwBC,OAAxB;AACD;;AAED,gBAAMC,SAAYD,OAAZ,SAAuBZ,KAAKjC,CAAL,CAA7B;AACA0C,sBAAUI,MAAV,IAAoBL,OAAOR,KAAKjC,CAAL,CAAP,CAApB;AACD;AACF;;AAED,aAAKP,OAAL,CAAa8B,eAAb,CAA6BmB,SAA7B;AACD;AAvHyD;AAAA;AAAA,+BAyHjD;AACP,eAAO,8BAAC,gBAAD,eAAsB,KAAKlD,KAA3B,IAAkC,SAAS,KAAKyB,WAAhD,IAAP;AACD;AA3HyD;;AAAA;AAAA,IACvB8B,gBADuB;;AA8H5DhC,yBAAuBiC,WAAvB,qBAAqD,yBAAelC,gBAAf,CAArD;;AAEAC,yBAAuBkC,YAAvB,GAAsC;AACpCrB,eAAWsB,oBAAUC,MAAV,CAAiBC,UADQ;AAEpCpC,mBAAekC,oBAAUC,MAAV,CAAiBC,UAFI;AAGpC7B,qBAAiB2B,oBAAUG,IAHS;AAIpC1D,cAAUuD,oBAAUG,IAJgB;AAKpCf,kBAAcY,oBAAUG;AALY,GAAtC;;AAQAtC,yBAAuBuC,iBAAvB,GAA2C;AACzCrC,iBAAaiC,oBAAUK,KADkB;AAEzCnC,gBAAY8B,oBAAUM,MAFmB;AAGzCnC,uBAAmB6B,oBAAUG,IAHY;AAIzCzB,eAAWsB,oBAAUC,MAJoB;AAKzCf,sBAAkBc,oBAAUC,MALa;AAMzCnC,mBAAekC,oBAAUC,MANgB;AAOzC5B,qBAAiB2B,oBAAUG,IAPc;AAQzCf,kBAAcY,oBAAUG;AARiB,GAA3C;;AAxI4D,MAmJrDI,oBAnJqD,GAmJ7B3C,gBAnJ6B,CAmJrD2C,oBAnJqD;;AAoJ5D1C,yBAAuB0C,oBAAvB,GAA8CA,oBAA9C;;AAEA,SAAO1C,sBAAP;AACD","file":"connectAxesToLayout.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport nestedProperty from 'plotly.js/src/lib/nested_property';\nimport {deepCopyPublic, setMultiValuedContainer} from './multiValues';\nimport {capitalize, getAllAxes, getDisplayName, getAxisTitle} from '../lib';\n\nfunction computeAxesOptions(axes, props, context) {\n  const _ = context.localize;\n  let filteredAxes = axes;\n  if (props.axisFilter) {\n    filteredAxes = axes.filter(props.axisFilter);\n  }\n\n  const options = [];\n  for (let i = 0; i < filteredAxes.length; i++) {\n    const ax = filteredAxes[i];\n    const label = capitalize(ax._name.split('axis')[0]);\n    const value = (ax._subplot && !ax._subplot.includes('xaxis') && !ax._subplot.includes('yaxis')\n      ? ax._subplot + '.' + ax._name\n      : ax._subplot\n    ).trim();\n\n    options[i] = {\n      label,\n      value,\n      axisGroup: ax._axisGroup,\n      title: getAxisTitle(ax),\n    };\n  }\n\n  return options.length > 1 ? [{label: _('All'), value: 'allaxes'}].concat(options) : options;\n}\n\nexport default function connectAxesToLayout(WrappedComponent) {\n  class AxesConnectedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.axes = getAllAxes(context.fullContainer);\n      this.axesOptions = computeAxesOptions(this.axes, props, context);\n\n      // this.axesOptions can be an empty array when we have a filter on an AxesFold\n      // and no axes correspond to the condition\n      let defaultAxesTarget = null;\n      if (this.axesOptions.length === 1) {\n        defaultAxesTarget = this.axesOptions[0].value;\n      }\n      if (this.axesOptions.length > 1) {\n        defaultAxesTarget = this.axesOptions[1].value;\n      }\n\n      this.state = {\n        axesTarget: defaultAxesTarget,\n      };\n\n      this.axesTargetHandler = this.axesTargetHandler.bind(this);\n      this.updateContainer = this.updateContainer.bind(this);\n\n      this.setLocals(props, this.state, context);\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n      this.axes = getAllAxes(nextContext.fullContainer);\n      this.axesOptions = computeAxesOptions(this.axes, nextProps, nextContext);\n      // This is not enough, what if plotly.js adds new axes...\n      this.setLocals(nextProps, nextState, nextContext);\n    }\n\n    setLocals(nextProps, nextState, nextContext) {\n      const {container, fullContainer} = nextContext;\n      const {axesTarget} = nextState;\n\n      if (axesTarget === 'allaxes') {\n        const multiValuedContainer = deepCopyPublic(this.axes[0]);\n        this.axes.slice(1).forEach(ax =>\n          Object.keys(ax).forEach(key =>\n            setMultiValuedContainer(multiValuedContainer, deepCopyPublic(ax), key, {\n              searchArrays: true,\n            })\n          )\n        );\n        this.fullContainer = multiValuedContainer;\n        this.defaultContainer = this.axes[0];\n        this.container = {};\n      } else if (axesTarget) {\n        this.fullContainer = nestedProperty(fullContainer, axesTarget).get();\n        this.container = this.container = nestedProperty(container, axesTarget).get() || {};\n      }\n    }\n\n    getChildContext() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject\n            ? null\n            : this.context.getValObject(`${this.state.axesTarget}.${attr}`),\n        axesOptions: this.axesOptions,\n        axesTarget: this.state.axesTarget,\n        axesTargetHandler: this.axesTargetHandler,\n        container: this.container,\n        defaultContainer: this.defaultContainer,\n        fullContainer: this.fullContainer,\n        updateContainer: this.updateContainer,\n      };\n    }\n\n    provideValue() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject\n            ? null\n            : this.context.getValObject(`${this.state.axesTarget}.${attr}`),\n        axesOptions: this.axesOptions,\n        axesTarget: this.state.axesTarget,\n        axesTargetHandler: this.axesTargetHandler,\n        container: this.container,\n        defaultContainer: this.defaultContainer,\n        fullContainer: this.fullContainer,\n        updateContainer: this.updateContainer,\n      };\n    }\n\n    axesTargetHandler(axesTarget) {\n      this.setState({axesTarget});\n    }\n\n    updateContainer(update) {\n      const newUpdate = {};\n      const {axesTarget} = this.state;\n\n      let axes = this.axes;\n      if (axesTarget !== 'allaxes') {\n        // only the selected container\n        axes = [this.fullContainer];\n      }\n\n      const keys = Object.keys(update);\n      for (let i = 0; i < keys.length; i++) {\n        for (let j = 0; j < axes.length; j++) {\n          const subplot = axes[j]._subplot;\n          let axesKey = axes[j]._name;\n\n          if (subplot && !subplot.includes('xaxis') && !subplot.includes('yaxis')) {\n            axesKey = `${subplot}.${axesKey}`;\n          }\n\n          const newkey = `${axesKey}.${keys[i]}`;\n          newUpdate[newkey] = update[keys[i]];\n        }\n      }\n\n      this.context.updateContainer(newUpdate);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} options={this.axesOptions} />;\n    }\n  }\n\n  AxesConnectedComponent.displayName = `AxesConnected${getDisplayName(WrappedComponent)}`;\n\n  AxesConnectedComponent.contextTypes = {\n    container: PropTypes.object.isRequired,\n    fullContainer: PropTypes.object.isRequired,\n    updateContainer: PropTypes.func,\n    localize: PropTypes.func,\n    getValObject: PropTypes.func,\n  };\n\n  AxesConnectedComponent.childContextTypes = {\n    axesOptions: PropTypes.array,\n    axesTarget: PropTypes.string,\n    axesTargetHandler: PropTypes.func,\n    container: PropTypes.object,\n    defaultContainer: PropTypes.object,\n    fullContainer: PropTypes.object,\n    updateContainer: PropTypes.func,\n    getValObject: PropTypes.func,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  AxesConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return AxesConnectedComponent;\n}\n"]}