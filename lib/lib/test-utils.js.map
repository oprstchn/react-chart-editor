{"version":3,"sources":["../../src/lib/test-utils.js"],"names":["adapter","Adapter","fixtures","scatter","config","applyConfig","dataSources","x1","y1","y2","dataSourceOptions","label","value","graphDiv","data","xsrc","ysrc","name","type","yaxis","layout","title","yaxis2","titlefont","color","tickfont","overlaying","side","area","mode","stackgroup","pie","labelssrc","valuessrc","deref","setupGraphDiv","mockMissingSvgApis","p","document","createElementNS","proto","Object","getPrototypeOf","getTotalLength","getPointAtLength","x","y","newGraphDiv","window","createElement","id","figure","gd","plotly","newPlot","TestEditor","EditorControls","mount","shallow"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;;;AAEA,uBAAU,EAACA,SAAS,IAAIC,4BAAJ,EAAV,EAAV;;AAEA;;AAEA,IAAMC,WAAW;AACfC,SADe,mBACPC,MADO,EACC;AACd,WAAOC,YAAYD,MAAZ,EAAoB;AACzBE,mBAAa;AACXC,YAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADO;AAEXC,YAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFO;AAGXC,YAAI,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAHO,OADY;AAMzBC,yBAAmB,CACjB,EAACC,OAAO,MAAR,EAAgBC,OAAO,IAAvB,EADiB,EAEjB,EAACD,OAAO,MAAR,EAAgBC,OAAO,IAAvB,EAFiB,EAGjB,EAACD,OAAO,OAAR,EAAiBC,OAAO,IAAxB,EAHiB,CANM;AAWzBC,gBAAU;AACRC,cAAM,CACJ;AACEC,gBAAM,IADR;AAEEC,gBAAM,IAFR;AAGEC,gBAAM,YAHR;AAIEC,gBAAM;AAJR,SADI,EAOJ;AACEH,gBAAM,IADR;AAEEC,gBAAM,IAFR;AAGEC,gBAAM,aAHR;AAIEE,iBAAO,IAJT;AAKED,gBAAM;AALR,SAPI,CADE;AAgBRE,gBAAQ;AACNC,iBAAO,uBADD;AAENF,iBAAO,EAFD;AAGNG,kBAAQ;AACND,mBAAO,cADD;AAENE,uBAAW,EAACC,OAAO,oBAAR,EAFL;AAGNC,sBAAU,EAACD,OAAO,oBAAR,EAHJ;AAINE,wBAAY,GAJN;AAKNC,kBAAM;AALA;AAHF;AAhBA;AAXe,KAApB,CAAP;AAwCD,GA1Cc;AA4CfC,MA5Ce,gBA4CVxB,MA5CU,EA4CF;AACX,WAAOC,YAAYD,MAAZ,EAAoB;AACzBE,mBAAa;AACXC,YAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADO;AAEXC,YAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAFO,OADY;AAKzBE,yBAAmB,CAAC,EAACC,OAAO,MAAR,EAAgBC,OAAO,IAAvB,EAAD,EAA+B,EAACD,OAAO,MAAR,EAAgBC,OAAO,IAAvB,EAA/B,CALM;AAMzBC,gBAAU;AACRC,cAAM,CACJ;AACEI,gBAAM,SADR;AAEEW,gBAAM,eAFR;AAGEC,sBAAY,CAHd;AAIEf,gBAAM,IAJR;AAKEC,gBAAM;AALR,SADI,CADE;AAURI,gBAAQ;AAVA;AANe,KAApB,CAAP;AAmBD,GAhEc;AAkEfW,KAlEe,eAkEX3B,MAlEW,EAkEH;AACV,WAAOC,YAAYD,MAAZ,EAAoB;AACzBE,mBAAa;AACXC,YAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADO;AAEXC,YAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAFO,OADY;AAKzBE,yBAAmB,CAAC,EAACC,OAAO,MAAR,EAAgBC,OAAO,IAAvB,EAAD,EAA+B,EAACD,OAAO,MAAR,EAAgBC,OAAO,IAAvB,EAA/B,CALM;AAMzBC,gBAAU;AACRC,cAAM,CAAC,EAACI,MAAM,KAAP,EAAcW,MAAM,SAApB,EAA+BG,WAAW,IAA1C,EAAgDC,WAAW,IAA3D,EAAD,CADE;AAERb,gBAAQ;AAFA;AANe,KAApB,CAAP;AAWD;AA9Ec,CAAjB;;AAiFA,SAASf,WAAT,GAA8F;AAAA,MAAzED,MAAyE,uEAAhE,EAAgE;AAAA;AAAA,2BAA3DS,QAA2D;AAAA,MAAhDC,IAAgD,iBAAhDA,IAAgD;AAAA,MAA1CM,MAA0C,iBAA1CA,MAA0C;AAAA,MAAjCV,iBAAiC,QAAjCA,iBAAiC;AAAA,MAAdJ,WAAc,QAAdA,WAAc;;AAC5F,MAAIF,OAAOgB,MAAX,EAAmB;AACjB,4BAAWA,MAAX,EAAmBhB,OAAOgB,MAA1B;AACD;AACD,MAAIhB,OAAOU,IAAX,EAAiB;AACf,4BAAWA,IAAX,EAAiBV,OAAOU,IAAxB;AACD;AACD,MAAIV,OAAO8B,KAAP,KAAiB,KAArB,EAA4B;AAC1B,0BAAYpB,IAAZ,EAAkBR,WAAlB;AACD;;AAED;AACA,MAAMO,WAAWsB,cAAc,EAACrB,UAAD,EAAOM,cAAP,EAAd,CAAjB;;AAEA,SAAO,EAACd,wBAAD,EAAcI,oCAAd,EAAiCG,kBAAjC,EAAP;AACD;;AAED;;;;;;AAMA,SAASuB,kBAAT,GAA8B;AAC5B,MAAMC,IAAIC,SAASC,eAAT,CAAyB,4BAAzB,EAAuD,MAAvD,CAAV;AACA,MAAMC,QAAQC,OAAOC,cAAP,CAAsBL,CAAtB,CAAd;AACA,MAAI,OAAOG,MAAMG,cAAb,KAAgC,UAApC,EAAgD;AAC9CH,UAAMG,cAAN,GAAuB;AAAA,aAAM,GAAN;AAAA,KAAvB;AACD;AACD,MAAI,OAAOH,MAAMI,gBAAb,KAAkC,UAAtC,EAAkD;AAChDJ,UAAMI,gBAAN,GAAyB;AAAA,aAAO,EAACC,GAAG,CAAJ,EAAOC,GAAG,CAAV,EAAP;AAAA,KAAzB;AACD;AACF;;AAED,SAASC,WAAT,GAAuB;AACrB,MAAMlC,WAAWmC,OAAOV,QAAP,CAAgBW,aAAhB,CAA8B,KAA9B,CAAjB;AACApC,WAASqC,EAAT,GAAc,UAAd;;AAEA,SAAOrC,QAAP;AACD;;AAED,SAASsB,aAAT,CAAuBgB,MAAvB,EAA+B;AAC7B,MAAMC,KAAKL,aAAX;;AAEAX;;AAEAiB,4BAAOC,OAAP,CAAeF,EAAf,EAAmBD,MAAnB;AACA,SAAOC,EAAP;AACD;;QAEOlD,Q,GAAAA,Q;QAAUmD,M,GAAAA,yB;QAA0BE,U,GAAlBC,wB;QAA8BC,K,GAAAA,a;QAAOC,O,GAAAA,e;QAASvB,a,GAAAA,a","file":"test-utils.js","sourcesContent":["import plotly from 'plotly.js/dist/plotly-cartesian';\nimport {extendDeep} from 'plotly.js/src/lib/extend';\nimport EditorControls from '../EditorControls';\nimport {configure, mount, shallow} from 'enzyme';\nimport {dereference} from '../lib';\nimport Adapter from 'enzyme-adapter-react-16';\n\nconfigure({adapter: new Adapter()});\n\n/* eslint-disable no-magic-numbers */\n\nconst fixtures = {\n  scatter(config) {\n    return applyConfig(config, {\n      dataSources: {\n        x1: [1, 2, 3],\n        y1: [2, 3, 4],\n        y2: [20, 30, 40],\n      },\n      dataSourceOptions: [\n        {label: 'xCol', value: 'x1'},\n        {label: 'yCol', value: 'y1'},\n        {label: 'yCol2', value: 'y2'},\n      ],\n      graphDiv: {\n        data: [\n          {\n            xsrc: 'x1',\n            ysrc: 'y1',\n            name: 'yaxis data',\n            type: 'scatter',\n          },\n          {\n            xsrc: 'x1',\n            ysrc: 'y2',\n            name: 'yaxis2 data',\n            yaxis: 'y2',\n            type: 'scatter',\n          },\n        ],\n        layout: {\n          title: 'Double Y Axis Example',\n          yaxis: {},\n          yaxis2: {\n            title: 'yaxis2 title',\n            titlefont: {color: 'rgb(148, 103, 189)'},\n            tickfont: {color: 'rgb(148, 103, 189)'},\n            overlaying: 'y',\n            side: 'right',\n          },\n        },\n      },\n    });\n  },\n\n  area(config) {\n    return applyConfig(config, {\n      dataSources: {\n        x1: [1, 2, 3],\n        y1: [2, 3, 4],\n      },\n      dataSourceOptions: [{label: 'xCol', value: 'x1'}, {label: 'yCol', value: 'y1'}],\n      graphDiv: {\n        data: [\n          {\n            type: 'scatter',\n            mode: 'markers+lines',\n            stackgroup: 1,\n            xsrc: 'x1',\n            ysrc: 'y1',\n          },\n        ],\n        layout: {},\n      },\n    });\n  },\n\n  pie(config) {\n    return applyConfig(config, {\n      dataSources: {\n        x1: [1, 2, 3],\n        y1: [2, 3, 4],\n      },\n      dataSourceOptions: [{label: 'xCol', value: 'x1'}, {label: 'yCol', value: 'y1'}],\n      graphDiv: {\n        data: [{type: 'pie', mode: 'markers', labelssrc: 'x1', valuessrc: 'y1'}],\n        layout: {},\n      },\n    });\n  },\n};\n\nfunction applyConfig(config = {}, {graphDiv: {data, layout}, dataSourceOptions, dataSources}) {\n  if (config.layout) {\n    extendDeep(layout, config.layout);\n  }\n  if (config.data) {\n    extendDeep(data, config.data);\n  }\n  if (config.deref !== false) {\n    dereference(data, dataSources);\n  }\n\n  // replace simple graphDiv with properly mocked GD including fullData/fullLayout\n  const graphDiv = setupGraphDiv({data, layout});\n\n  return {dataSources, dataSourceOptions, graphDiv};\n}\n\n/*\n * JSDOM does not implement full SVG spec. Mock out necessary methods here.\n * https://github.com/tmpvar/jsdom/issues/1330\n * Hardcoded return values have been \"good enough\" for now but feel free to\n * extend the API if necessary.\n */\nfunction mockMissingSvgApis() {\n  const p = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  const proto = Object.getPrototypeOf(p);\n  if (typeof proto.getTotalLength !== 'function') {\n    proto.getTotalLength = () => 100;\n  }\n  if (typeof proto.getPointAtLength !== 'function') {\n    proto.getPointAtLength = () => ({x: 0, y: 0});\n  }\n}\n\nfunction newGraphDiv() {\n  const graphDiv = window.document.createElement('div');\n  graphDiv.id = 'graphDiv';\n\n  return graphDiv;\n}\n\nfunction setupGraphDiv(figure) {\n  const gd = newGraphDiv();\n\n  mockMissingSvgApis();\n\n  plotly.newPlot(gd, figure);\n  return gd;\n}\n\nexport {fixtures, plotly, EditorControls as TestEditor, mount, shallow, setupGraphDiv};\n"]}