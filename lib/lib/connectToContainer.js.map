{"version":3,"sources":["../../src/lib/connectToContainer.js"],"names":["connectToContainer","containerConnectedContextTypes","localize","PropTypes","func","container","object","data","array","defaultContainer","fullContainer","fullData","fullLayout","getValObject","graphDiv","layout","onUpdate","plotly","updateContainer","traceIndexes","WrappedComponent","config","ContainerConnectedComponent","props","context","plotProps","modifyPlotProps","setLocals","nextProps","nextContext","attr","description","Object","assign","isVisible","Component","displayName","contextTypes","childContextTypes","string","plotly_editor_traits"],"mappings":"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","file":"connectToContainer.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport unpackPlotProps from './unpackPlotProps';\nimport {getDisplayName} from '../lib';\n\nexport const containerConnectedContextTypes = {\n  localize: PropTypes.func,\n  container: PropTypes.object,\n  data: PropTypes.array,\n  defaultContainer: PropTypes.object,\n  fullContainer: PropTypes.object,\n  fullData: PropTypes.array,\n  fullLayout: PropTypes.object,\n  getValObject: PropTypes.func,\n  graphDiv: PropTypes.object,\n  layout: PropTypes.object,\n  onUpdate: PropTypes.func,\n  plotly: PropTypes.object,\n  updateContainer: PropTypes.func,\n  traceIndexes: PropTypes.array,\n};\n\nexport default function connectToContainer(WrappedComponent, config = {}) {\n  class ContainerConnectedComponent extends Component {\n    // Run the inner modifications first and allow more recent modifyPlotProp\n    // config function to modify last.\n    static modifyPlotProps(props, context, plotProps) {\n      if (WrappedComponent.modifyPlotProps) {\n        WrappedComponent.modifyPlotProps(props, context, plotProps);\n      }\n      if (config.modifyPlotProps) {\n        config.modifyPlotProps(props, context, plotProps);\n      }\n    }\n\n    constructor(props, context) {\n      super(props, context);\n\n      this.setLocals(props, context);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      this.setLocals(nextProps, nextContext);\n    }\n\n    setLocals(props, context) {\n      this.plotProps = unpackPlotProps(props, context);\n      this.attr = props.attr;\n      ContainerConnectedComponent.modifyPlotProps(props, context, this.plotProps);\n    }\n\n    getChildContext() {\n      return {\n        description: this.plotProps.description,\n        attr: this.attr,\n      };\n    }\n\n    provideValue() {\n      return {\n        description: this.plotProps.description,\n        attr: this.attr,\n      };\n    }\n\n    render() {\n      // Merge plotprops onto props so leaf components only need worry about\n      // props. However pass plotProps as a specific prop in case inner component\n      // is also wrapped by a component that `unpackPlotProps`. That way inner\n      // component can skip computation as it can see plotProps is already defined.\n      const {plotProps = this.plotProps, ...props} = Object.assign({}, this.plotProps, this.props);\n      if (props.isVisible) {\n        return <WrappedComponent {...props} plotProps={plotProps} />;\n      }\n\n      return null;\n    }\n  }\n\n  ContainerConnectedComponent.displayName = `ContainerConnected${getDisplayName(WrappedComponent)}`;\n\n  ContainerConnectedComponent.contextTypes = containerConnectedContextTypes;\n  ContainerConnectedComponent.childContextTypes = {\n    description: PropTypes.string,\n    attr: PropTypes.string,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  ContainerConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return ContainerConnectedComponent;\n}\n"]}