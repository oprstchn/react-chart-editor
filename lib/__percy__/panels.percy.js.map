{"version":3,"sources":["../../src/__percy__/panels.percy.js"],"names":["mocks","panels","panelsToTest","bar","box","pie","histogram","histogram2d","violin","window","URL","createObjectURL","panelFixture","Panel","group","name","figure","gd","_context","plotly","setPlotConfig","setBackground","fixtures","scatter","dataSources","dataSourceOptions","snapshotWidth","Object","keys","forEach","selectedPanels","m","words","p","split","panelGroup","panelName","slice","join","percySnapshot","widths"],"mappings":";;AAAA;;AAEA;;AAEA;;IAAYA,K;;AACZ;;IAAYC,M;;AAEZ;;AACA;;AACA;;;;AAEA;;;;AAIA,IAAMC,eAAe;AACnBC,OAAK,CAAC,kBAAD,EAAqB,kBAArB,CADc;AAEnBC,OAAK,CAAC,kBAAD,EAAqB,kBAArB,CAFc;AAGnBC,OAAK,CAAC,kBAAD,EAAqB,kBAArB,CAHc;AAInBC,aAAW,CAAC,kBAAD,EAAqB,kBAArB,CAJQ;AAKnBC,eAAa,CAAC,kBAAD,EAAqB,kBAArB,CALM;AAMnBC,UAAQ,CAAC,kBAAD,EAAqB,kBAArB;AANW,CAArB;;AASAC,OAAOC,GAAP,CAAWC,eAAX,GAA6B,YAAW;AACtC,SAAO,IAAP;AACD,CAFD;;AAIA,IAAMC,eAAe,SAAfA,YAAe,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,EAAqBC,MAArB,EAAgC;AACnD,MAAMC,KAAK,8BAAcD,MAAd,CAAX;AACAC,KAAGC,QAAH,GAAcC,kBAAOC,aAAP,EAAd;AACAH,KAAGC,QAAH,CAAYG,aAAZ,GAA4B,YAAM;AAChC,WAAO,IAAP;AACD,GAFD;;AAIA,SACE;AAAA;AAAA,MAAK,WAAU,eAAf;AACE;AAAC,2BAAD;AAAA;AACE,gBAAQF,iBADV;AAEE,kBAAUF,EAFZ;AAGE,qBAAaK,oBAASC,OAAT,GAAmBC,WAHlC;AAIE,2BAAmBF,oBAASC,OAAT,GAAmBE;AAJxC;AAME;AAAC,oCAAD;AAAA;AACE,4BAAC,KAAD,IAAO,OAAOX,KAAd,EAAqB,MAAMC,IAA3B;AADF;AANF;AADF,GADF;AAcD,CArBD;;AAuBA,IAAMW,gBAAgB,GAAtB;;AAEAC,OAAOC,IAAP,CAAY5B,KAAZ,EAAmB6B,OAAnB,CAA2B,aAAK;AAC9B,MAAMC,iBAAiB5B,aAAa6B,CAAb,IAAkB7B,aAAa6B,CAAb,CAAlB,GAAoCJ,OAAOC,IAAP,CAAY3B,MAAZ,CAA3D;;AAEA6B,iBAAeD,OAAf,CAAuB,aAAK;AAC1B,QAAMG,QAAQC,EAAEC,KAAF,CAAQ,WAAR,CAAd;AACA,QAAMC,aAAaH,MAAM,CAAN,CAAnB;AACA,QAAMI,YAAYJ,MAAMK,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmBC,IAAnB,CAAwB,GAAxB,CAAlB;;AAEAC,kBAAiBR,CAAjB,SAAsBE,CAAtB,EAA2B,EAACO,QAAQ,CAACd,aAAD,CAAT,EAA3B,EAAsD;AAAA,aACpDd,aAAaX,OAAOgC,CAAP,CAAb,EAAwBE,UAAxB,EAAoCC,SAApC,EAA+CpC,MAAM+B,CAAN,CAA/C,CADoD;AAAA,KAAtD;AAGD,GARD;AASD,CAZD","file":"panels.percy.js","sourcesContent":["import {TestEditor, setupGraphDiv, fixtures, plotly} from 'lib/test-utils';\n\nimport {PanelMenuWrapper} from '../components';\n\nimport * as mocks from '../../dev/percy';\nimport * as panels from '../default_panels/';\n\nimport '../../dev/styles.css';\nimport '../styles/main.scss';\nimport './percy.css';\n\n/**\n * To add more Percy tests - add a mock file to /dev/percy, add it to /dev/percy/index.js\n * To specify which panels to test with the mock, add entry to panelsToTest, else all panels will be tested\n */\nconst panelsToTest = {\n  bar: ['GraphCreatePanel', 'StyleTracesPanel'],\n  box: ['GraphCreatePanel', 'StyleTracesPanel'],\n  pie: ['GraphCreatePanel', 'StyleTracesPanel'],\n  histogram: ['GraphCreatePanel', 'StyleTracesPanel'],\n  histogram2d: ['GraphCreatePanel', 'StyleTracesPanel'],\n  violin: ['GraphCreatePanel', 'StyleTracesPanel'],\n};\n\nwindow.URL.createObjectURL = function() {\n  return null;\n};\n\nconst panelFixture = (Panel, group, name, figure) => {\n  const gd = setupGraphDiv(figure);\n  gd._context = plotly.setPlotConfig();\n  gd._context.setBackground = () => {\n    return null;\n  };\n\n  return (\n    <div className=\"plotly_editor\">\n      <TestEditor\n        plotly={plotly}\n        graphDiv={gd}\n        dataSources={fixtures.scatter().dataSources}\n        dataSourceOptions={fixtures.scatter().dataSourceOptions}\n      >\n        <PanelMenuWrapper>\n          <Panel group={group} name={name} />\n        </PanelMenuWrapper>\n      </TestEditor>\n    </div>\n  );\n};\n\nconst snapshotWidth = 500;\n\nObject.keys(mocks).forEach(m => {\n  const selectedPanels = panelsToTest[m] ? panelsToTest[m] : Object.keys(panels);\n\n  selectedPanels.forEach(p => {\n    const words = p.split(/(?=[A-Z])/);\n    const panelGroup = words[0];\n    const panelName = words.slice(1, -1).join(' ');\n\n    percySnapshot(`${m}_${p}`, {widths: [snapshotWidth]}, () =>\n      panelFixture(panels[p], panelGroup, panelName, mocks[m])\n    );\n  });\n});\n"]}