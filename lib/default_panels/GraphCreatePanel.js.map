{"version":3,"sources":["../../src/default_panels/GraphCreatePanel.js"],"names":["GraphCreatePanel","_","localize","setPanel","t","transforms","some","includes","tr","type","histogram2d","histogram","choropleth","label","value"],"mappings":"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","file":"GraphCreatePanel.js","sourcesContent":["import React from 'react';\n// import PropTypes from 'prop-types';\nimport {\n  DataSelector,\n  Dropdown,\n  Radio,\n  PlotlySection,\n  AxesCreator,\n  SubplotCreator,\n  TraceAccordion,\n  TraceSelector,\n  TraceTypeSection,\n  LocationSelector,\n} from '../components';\nimport {\n  HistogramInfoVertical,\n  HistogramInfoHorizontal,\n  Histogram2d,\n} from '../components/fields/derived';\nimport {EditorControlsContext, ModalProviderContext} from '../context';\n\nconst GraphCreatePanel = () => {\n  return (\n    <EditorControlsContext.Consumer>\n      {({localize: _}) => (\n        <ModalProviderContext.Consumer>\n          {({setPanel}) => (\n            <TraceAccordion\n              canAdd\n              traceFilterCondition={t =>\n                !(\n                  t.transforms &&\n                  t.transforms.some(tr => ['fit', 'moving-average'].includes(tr.type))\n                )\n              }\n            >\n              <TraceSelector label={_('Type')} attr=\"type\" show />\n\n              <LocationSelector attr=\"type\" />\n\n              <DataSelector label={_('Values')} attr=\"values\" />\n              <DataSelector label={_('Labels')} attr=\"labels\" />\n\n              <DataSelector\n                label={{\n                  histogram2d: _('X Values'),\n                  histogram: _('X Values'),\n                  '*': _('X'),\n                }}\n                attr=\"x\"\n              />\n              <DataSelector\n                label={{\n                  histogram2d: _('Y Values'),\n                  histogram: _('Y Values'),\n                  '*': _('Y'),\n                }}\n                attr=\"y\"\n              />\n              <DataSelector\n                label={{\n                  choropleth: _('Values'),\n                  histogram2d: _('Z Values'),\n                  '*': _('Z'),\n                }}\n                attr=\"z\"\n              />\n              <Radio\n                label={_('Orientation')}\n                attr=\"orientation\"\n                options={[{label: _('Vertical'), value: 'v'}, {label: _('Horizontal'), value: 'h'}]}\n              />\n              <HistogramInfoVertical>\n                {_(\n                  'Note: in vertical orientation, X values are used for binning. If Y values are provided, they are used as inputs to the histogram function which you can configure in the '\n                )}\n                <a onClick={() => setPanel('Style', 'Traces')}>{_('Traces')}</a>\n                {_(\n                  ' panel under Style. If Y values are omitted, the histogram function defaults to Count.'\n                )}\n              </HistogramInfoVertical>\n              <HistogramInfoHorizontal>\n                {_(\n                  'Note: in horizontal orientation, Y values are used for binning. If X values are provided, they are used as inputs to the histogram function which you can configure in the '\n                )}\n                <a onClick={() => setPanel('Style', 'Traces')}>{_('Traces')}</a>\n                {_(\n                  ' under Style panel. If X values are omitted, the histogram function defaults to Count.'\n                )}\n              </HistogramInfoHorizontal>\n              <Histogram2d>\n                {_(\n                  'Note: X and Y Values are used for binning. If Z values are provided, they are used as inputs to the histogram function which you can configure in the '\n                )}\n                <a onClick={() => setPanel('Style', 'Traces')}>{_('Traces')}</a>\n                {_(\n                  ' under Style panel. If Z values are omitted, the histogram function defaults to Count.'\n                )}\n              </Histogram2d>\n              <DataSelector label={_('I (Optional)')} attr=\"i\" />\n              <DataSelector label={_('J (Optional)')} attr=\"j\" />\n              <DataSelector label={_('K (Optional)')} attr=\"k\" />\n              <DataSelector label={_('Open')} attr=\"open\" />\n              <DataSelector label={_('High')} attr=\"high\" />\n              <DataSelector label={_('Low')} attr=\"low\" />\n              <DataSelector label={_('Close')} attr=\"close\" />\n              <DataSelector label={_('A')} attr=\"a\" />\n              <DataSelector label={_('B')} attr=\"b\" />\n              <DataSelector label={_('C')} attr=\"c\" />\n              <DataSelector label={_('U')} attr=\"u\" />\n              <DataSelector label={_('V')} attr=\"v\" />\n              <DataSelector label={_('W')} attr=\"w\" />\n              <DataSelector label={_('X start')} attr=\"starts.x\" />\n              <DataSelector label={_('Y start')} attr=\"starts.y\" />\n              <DataSelector label={_('Z start')} attr=\"starts.z\" />\n              <DataSelector label={_('Headers')} attr=\"header.values\" />\n              <DataSelector label={_('Columns')} attr=\"cells.values\" />\n\n              <TraceTypeSection\n                traceTypes={['scatterpolar', 'scatterpolargl', 'barpolar']}\n                mode=\"trace\"\n              >\n                <DataSelector label={_('Radius')} attr=\"r\" />\n                <DataSelector label={_('Theta')} attr=\"theta\" />\n                <Dropdown\n                  label={_('Theta Unit')}\n                  options={[\n                    {label: _('Radians'), value: 'radians'},\n                    {label: _('Degrees'), value: 'degrees'},\n                    {label: _('Gradians'), value: 'gradians'},\n                  ]}\n                  attr=\"thetaunit\"\n                  clearable={false}\n                />\n              </TraceTypeSection>\n\n              <AxesCreator attr=\"fake_attr\" />\n              <SubplotCreator attr=\"fake_attr\" />\n\n              <PlotlySection name={_('Header Options')}>\n                <DataSelector label={_('Fill Color')} attr=\"header.fill.color\" />\n                <DataSelector label={_('Font Color')} attr=\"header.font.color\" />\n                <DataSelector label={_('Font Size')} attr=\"header.font.size\" />\n              </PlotlySection>\n\n              <PlotlySection name={_('Cell Options')}>\n                <DataSelector label={_('Fill Color')} attr=\"cells.fill.color\" />\n                <DataSelector label={_('Font Color')} attr=\"cells.font.color\" />\n                <DataSelector label={_('Font Size')} attr=\"cells.font.size\" />\n              </PlotlySection>\n\n              <PlotlySection name={_('Column Options')}>\n                <DataSelector label={_('Width')} attr=\"columnwidth\" />\n                <DataSelector label={_('Order')} attr=\"columnorder\" />\n              </PlotlySection>\n\n              <PlotlySection name={_('Options')}>\n                <DataSelector label={_('Intensity')} attr=\"intensity\" />\n                <DataSelector label={_('Facecolor')} attr=\"facecolor\" />\n                <DataSelector label={_('Vertexcolor')} attr=\"vertexcolor\" />\n                <Radio\n                  label={_('Transpose')}\n                  attr=\"transpose\"\n                  options={[{label: _('No'), value: false}, {label: _('Yes'), value: true}]}\n                />\n              </PlotlySection>\n            </TraceAccordion>\n          )}\n        </ModalProviderContext.Consumer>\n      )}\n    </EditorControlsContext.Consumer>\n  );\n};\n\nexport default GraphCreatePanel;\n// GraphCreatePanel.contextTypes = {\n//   localize: PropTypes.func,\n//   setPanel: PropTypes.func,\n// };\n"]}